{"version":3,"sources":["node_modules/ramda/es/F.js","node_modules/ramda/es/T.js","node_modules/ramda/es/__.js","node_modules/ramda/es/internal/_isPlaceholder.js","node_modules/ramda/es/internal/_curry1.js","node_modules/ramda/es/internal/_curry2.js","node_modules/ramda/es/add.js","node_modules/ramda/es/internal/_concat.js","node_modules/ramda/es/internal/_arity.js","node_modules/ramda/es/internal/_curryN.js","node_modules/ramda/es/curryN.js","node_modules/ramda/es/addIndex.js","node_modules/ramda/es/addIndexRight.js","node_modules/ramda/es/internal/_curry3.js","node_modules/ramda/es/adjust.js","node_modules/ramda/es/internal/_isArray.js","node_modules/ramda/es/internal/_isTransformer.js","node_modules/ramda/es/internal/_dispatchable.js","node_modules/ramda/es/internal/_reduced.js","node_modules/ramda/es/internal/_xfBase.js","node_modules/ramda/es/internal/_xall.js","node_modules/ramda/es/all.js","node_modules/ramda/es/internal/_arrayFromIterator.js","node_modules/ramda/es/internal/_includesWith.js","node_modules/ramda/es/internal/_functionName.js","node_modules/ramda/es/internal/_has.js","node_modules/ramda/es/internal/_objectIs.js","node_modules/ramda/es/internal/_isArguments.js","node_modules/ramda/es/keys.js","node_modules/ramda/es/type.js","node_modules/ramda/es/internal/_equals.js","node_modules/ramda/es/equals.js","node_modules/ramda/es/internal/_indexOf.js","node_modules/ramda/es/internal/_includes.js","node_modules/ramda/es/internal/_map.js","node_modules/ramda/es/internal/_quote.js","node_modules/ramda/es/internal/_toISOString.js","node_modules/ramda/es/internal/_complement.js","node_modules/ramda/es/internal/_arrayReduce.js","node_modules/ramda/es/internal/_filter.js","node_modules/ramda/es/internal/_isObject.js","node_modules/ramda/es/internal/_xfilter.js","node_modules/ramda/es/filter.js","node_modules/ramda/es/reject.js","node_modules/ramda/es/internal/_toString.js","node_modules/ramda/es/toString.js","node_modules/ramda/es/max.js","node_modules/ramda/es/internal/_xmap.js","node_modules/ramda/es/map.js","node_modules/ramda/es/internal/_isInteger.js","node_modules/ramda/es/internal/_isString.js","node_modules/ramda/es/nth.js","node_modules/ramda/es/prop.js","node_modules/ramda/es/pluck.js","node_modules/ramda/es/internal/_isArrayLike.js","node_modules/ramda/es/internal/_createReduce.js","node_modules/ramda/es/internal/_xArrayReduce.js","node_modules/ramda/es/bind.js","node_modules/ramda/es/internal/_xReduce.js","node_modules/ramda/es/internal/_xwrap.js","node_modules/ramda/es/reduce.js","node_modules/ramda/es/allPass.js","node_modules/ramda/es/always.js","node_modules/ramda/es/and.js","node_modules/ramda/es/internal/_xany.js","node_modules/ramda/es/any.js","node_modules/ramda/es/anyPass.js","node_modules/ramda/es/internal/_reduce.js","node_modules/ramda/es/ap.js","node_modules/ramda/es/internal/_aperture.js","node_modules/ramda/es/internal/_xaperture.js","node_modules/ramda/es/aperture.js","node_modules/ramda/es/append.js","node_modules/ramda/es/apply.js","node_modules/ramda/es/values.js","node_modules/ramda/es/applySpec.js","node_modules/ramda/es/applyTo.js","node_modules/ramda/es/ascend.js","node_modules/ramda/es/internal/_assoc.js","node_modules/ramda/es/isNil.js","node_modules/ramda/es/assocPath.js","node_modules/ramda/es/assoc.js","node_modules/ramda/es/nAry.js","node_modules/ramda/es/binary.js","node_modules/ramda/es/internal/_isFunction.js","node_modules/ramda/es/liftN.js","node_modules/ramda/es/lift.js","node_modules/ramda/es/both.js","node_modules/ramda/es/call.js","node_modules/ramda/es/internal/_makeFlat.js","node_modules/ramda/es/internal/_forceReduced.js","node_modules/ramda/es/internal/_flatCat.js","node_modules/ramda/es/internal/_xchain.js","node_modules/ramda/es/chain.js","node_modules/ramda/es/clamp.js","node_modules/ramda/es/internal/_cloneRegExp.js","node_modules/ramda/es/internal/_clone.js","node_modules/ramda/es/clone.js","node_modules/ramda/es/collectBy.js","node_modules/ramda/es/comparator.js","node_modules/ramda/es/not.js","node_modules/ramda/es/complement.js","node_modules/ramda/es/internal/_pipe.js","node_modules/ramda/es/internal/_checkForMethod.js","node_modules/ramda/es/slice.js","node_modules/ramda/es/tail.js","node_modules/ramda/es/pipe.js","node_modules/ramda/es/reverse.js","node_modules/ramda/es/compose.js","node_modules/ramda/es/head.js","node_modules/ramda/es/internal/_identity.js","node_modules/ramda/es/identity.js","node_modules/ramda/es/pipeWith.js","node_modules/ramda/es/composeWith.js","node_modules/ramda/es/concat.js","node_modules/ramda/es/cond.js","node_modules/ramda/es/curry.js","node_modules/ramda/es/constructN.js","node_modules/ramda/es/construct.js","node_modules/ramda/es/converge.js","node_modules/ramda/es/count.js","node_modules/ramda/es/internal/_xreduceBy.js","node_modules/ramda/es/reduceBy.js","node_modules/ramda/es/countBy.js","node_modules/ramda/es/dec.js","node_modules/ramda/es/defaultTo.js","node_modules/ramda/es/descend.js","node_modules/ramda/es/internal/_Set.js","node_modules/ramda/es/difference.js","node_modules/ramda/es/differenceWith.js","node_modules/ramda/es/remove.js","node_modules/ramda/es/internal/_dissoc.js","node_modules/ramda/es/dissocPath.js","node_modules/ramda/es/dissoc.js","node_modules/ramda/es/divide.js","node_modules/ramda/es/internal/_xdrop.js","node_modules/ramda/es/drop.js","node_modules/ramda/es/internal/_xtake.js","node_modules/ramda/es/take.js","node_modules/ramda/es/internal/_dropLast.js","node_modules/ramda/es/internal/_xdropLast.js","node_modules/ramda/es/dropLast.js","node_modules/ramda/es/internal/_dropLastWhile.js","node_modules/ramda/es/internal/_xdropLastWhile.js","node_modules/ramda/es/dropLastWhile.js","node_modules/ramda/es/internal/_xdropRepeatsWith.js","node_modules/ramda/es/last.js","node_modules/ramda/es/dropRepeatsWith.js","node_modules/ramda/es/dropRepeats.js","node_modules/ramda/es/eqBy.js","node_modules/ramda/es/dropRepeatsBy.js","node_modules/ramda/es/internal/_xdropWhile.js","node_modules/ramda/es/dropWhile.js","node_modules/ramda/es/or.js","node_modules/ramda/es/either.js","node_modules/ramda/es/internal/_isTypedArray.js","node_modules/ramda/es/empty.js","node_modules/ramda/es/takeLast.js","node_modules/ramda/es/endsWith.js","node_modules/ramda/es/eqProps.js","node_modules/ramda/es/evolve.js","node_modules/ramda/es/internal/_xfind.js","node_modules/ramda/es/find.js","node_modules/ramda/es/internal/_xfindIndex.js","node_modules/ramda/es/findIndex.js","node_modules/ramda/es/internal/_xfindLast.js","node_modules/ramda/es/findLast.js","node_modules/ramda/es/internal/_xfindLastIndex.js","node_modules/ramda/es/findLastIndex.js","node_modules/ramda/es/flatten.js","node_modules/ramda/es/flip.js","node_modules/ramda/es/forEach.js","node_modules/ramda/es/forEachObjIndexed.js","node_modules/ramda/es/fromPairs.js","node_modules/ramda/es/groupBy.js","node_modules/ramda/es/groupWith.js","node_modules/ramda/es/gt.js","node_modules/ramda/es/gte.js","node_modules/ramda/es/hasPath.js","node_modules/ramda/es/has.js","node_modules/ramda/es/hasIn.js","node_modules/ramda/es/identical.js","node_modules/ramda/es/ifElse.js","node_modules/ramda/es/inc.js","node_modules/ramda/es/includes.js","node_modules/ramda/es/indexBy.js","node_modules/ramda/es/indexOf.js","node_modules/ramda/es/init.js","node_modules/ramda/es/innerJoin.js","node_modules/ramda/es/insert.js","node_modules/ramda/es/insertAll.js","node_modules/ramda/es/internal/_xuniqBy.js","node_modules/ramda/es/uniqBy.js","node_modules/ramda/es/uniq.js","node_modules/ramda/es/intersection.js","node_modules/ramda/es/intersperse.js","node_modules/ramda/es/internal/_objectAssign.js","node_modules/ramda/es/objOf.js","node_modules/ramda/es/internal/_stepCat.js","node_modules/ramda/es/into.js","node_modules/ramda/es/invert.js","node_modules/ramda/es/invertObj.js","node_modules/ramda/es/invoker.js","node_modules/ramda/es/is.js","node_modules/ramda/es/isEmpty.js","node_modules/ramda/es/isNotNil.js","node_modules/ramda/es/join.js","node_modules/ramda/es/juxt.js","node_modules/ramda/es/keysIn.js","node_modules/ramda/es/lastIndexOf.js","node_modules/ramda/es/internal/_isNumber.js","node_modules/ramda/es/length.js","node_modules/ramda/es/lens.js","node_modules/ramda/es/update.js","node_modules/ramda/es/lensIndex.js","node_modules/ramda/es/paths.js","node_modules/ramda/es/path.js","node_modules/ramda/es/lensPath.js","node_modules/ramda/es/lensProp.js","node_modules/ramda/es/lt.js","node_modules/ramda/es/lte.js","node_modules/ramda/es/mapAccum.js","node_modules/ramda/es/mapAccumRight.js","node_modules/ramda/es/mapObjIndexed.js","node_modules/ramda/es/match.js","node_modules/ramda/es/mathMod.js","node_modules/ramda/es/maxBy.js","node_modules/ramda/es/sum.js","node_modules/ramda/es/mean.js","node_modules/ramda/es/median.js","node_modules/ramda/es/memoizeWith.js","node_modules/ramda/es/mergeAll.js","node_modules/ramda/es/mergeWithKey.js","node_modules/ramda/es/mergeDeepWithKey.js","node_modules/ramda/es/mergeDeepLeft.js","node_modules/ramda/es/mergeDeepRight.js","node_modules/ramda/es/mergeDeepWith.js","node_modules/ramda/es/mergeLeft.js","node_modules/ramda/es/mergeRight.js","node_modules/ramda/es/mergeWith.js","node_modules/ramda/es/min.js","node_modules/ramda/es/minBy.js","node_modules/ramda/es/internal/_modify.js","node_modules/ramda/es/modifyPath.js","node_modules/ramda/es/modify.js","node_modules/ramda/es/modulo.js","node_modules/ramda/es/move.js","node_modules/ramda/es/multiply.js","node_modules/ramda/es/partialObject.js","node_modules/ramda/es/negate.js","node_modules/ramda/es/none.js","node_modules/ramda/es/nthArg.js","node_modules/ramda/es/o.js","node_modules/ramda/es/of.js","node_modules/ramda/es/omit.js","node_modules/ramda/es/on.js","node_modules/ramda/es/once.js","node_modules/ramda/es/internal/_assertPromise.js","node_modules/ramda/es/otherwise.js","node_modules/ramda/es/over.js","node_modules/ramda/es/pair.js","node_modules/ramda/es/internal/_createPartialApplicator.js","node_modules/ramda/es/partial.js","node_modules/ramda/es/partialRight.js","node_modules/ramda/es/partition.js","node_modules/ramda/es/pathEq.js","node_modules/ramda/es/pathOr.js","node_modules/ramda/es/pathSatisfies.js","node_modules/ramda/es/pick.js","node_modules/ramda/es/pickAll.js","node_modules/ramda/es/pickBy.js","node_modules/ramda/es/prepend.js","node_modules/ramda/es/product.js","node_modules/ramda/es/useWith.js","node_modules/ramda/es/project.js","node_modules/ramda/es/internal/_promap.js","node_modules/ramda/es/internal/_xpromap.js","node_modules/ramda/es/promap.js","node_modules/ramda/es/propEq.js","node_modules/ramda/es/propIs.js","node_modules/ramda/es/propOr.js","node_modules/ramda/es/propSatisfies.js","node_modules/ramda/es/props.js","node_modules/ramda/es/range.js","node_modules/ramda/es/reduceRight.js","node_modules/ramda/es/reduceWhile.js","node_modules/ramda/es/reduced.js","node_modules/ramda/es/times.js","node_modules/ramda/es/repeat.js","node_modules/ramda/es/replace.js","node_modules/ramda/es/internal/_xscan.js","node_modules/ramda/es/scan.js","node_modules/ramda/es/sequence.js","node_modules/ramda/es/set.js","node_modules/ramda/es/sort.js","node_modules/ramda/es/sortBy.js","node_modules/ramda/es/sortWith.js","node_modules/ramda/es/split.js","node_modules/ramda/es/splitAt.js","node_modules/ramda/es/splitEvery.js","node_modules/ramda/es/splitWhen.js","node_modules/ramda/es/splitWhenever.js","node_modules/ramda/es/startsWith.js","node_modules/ramda/es/subtract.js","node_modules/ramda/es/swap.js","node_modules/ramda/es/symmetricDifference.js","node_modules/ramda/es/symmetricDifferenceWith.js","node_modules/ramda/es/takeLastWhile.js","node_modules/ramda/es/internal/_xtakeWhile.js","node_modules/ramda/es/takeWhile.js","node_modules/ramda/es/internal/_xtap.js","node_modules/ramda/es/tap.js","node_modules/ramda/es/internal/_isRegExp.js","node_modules/ramda/es/test.js","node_modules/ramda/es/andThen.js","node_modules/ramda/es/toLower.js","node_modules/ramda/es/toPairs.js","node_modules/ramda/es/toPairsIn.js","node_modules/ramda/es/toUpper.js","node_modules/ramda/es/transduce.js","node_modules/ramda/es/transpose.js","node_modules/ramda/es/traverse.js","node_modules/ramda/es/trim.js","node_modules/ramda/es/tryCatch.js","node_modules/ramda/es/unapply.js","node_modules/ramda/es/unary.js","node_modules/ramda/es/uncurryN.js","node_modules/ramda/es/unfold.js","node_modules/ramda/es/union.js","node_modules/ramda/es/internal/_xuniqWith.js","node_modules/ramda/es/uniqWith.js","node_modules/ramda/es/unionWith.js","node_modules/ramda/es/unless.js","node_modules/ramda/es/unnest.js","node_modules/ramda/es/until.js","node_modules/ramda/es/unwind.js","node_modules/ramda/es/valuesIn.js","node_modules/ramda/es/view.js","node_modules/ramda/es/when.js","node_modules/ramda/es/where.js","node_modules/ramda/es/whereAny.js","node_modules/ramda/es/whereEq.js","node_modules/ramda/es/without.js","node_modules/ramda/es/xor.js","node_modules/ramda/es/xprod.js","node_modules/ramda/es/zip.js","node_modules/ramda/es/zipObj.js","node_modules/ramda/es/zipWith.js","node_modules/ramda/es/thunkify.js","node_modules/ramda/es/index.js","index.ts"],"names":["F","_default","exports","default","T","_isPlaceholder","a","_isPlaceholder2","_interopRequireDefault","require","obj","__esModule","_curry1","fn","f1","arguments","length","apply","_curry","_curry2","f2","b","_b","_a","add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_arity2","_curryN","received","combined","argsIdx","left","combinedIdx","hasPlaceholder","Math","max","_curry3","_curryN2","curryN","_concat2","addIndex","origFn","list","args","Array","prototype","slice","call","addIndexRight","_curry4","f3","c","_c","adjust","len","_idx","_list","isArray","val","Object","toString","_isTransformer","_isArray2","_isTransformer2","_dispatchable","methodNames","transducerCreator","_isArray","transducer","_reduced","x","init","xf","_reduced2","_xfBase2","XAll","f","all","_xfBase","input","_xall","_dispatchable2","_xall2","_arrayFromIterator","iter","next","done","push","value","_includesWith","pred","_functionName","match","String","_has","prop","hasOwnProperty","_objectIs","is","_has2","_isArguments","_isArguments2","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","type","undefined","_arrayFromIterator2","_includesWith2","_functionName2","_objectIs2","_keys","_type","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","key","_equals2","_indexOf","inf","indexOf","_indexOf2","_includes","_map","functor","_quote","s","replace","pad","_toISOString","Date","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_arrayReduce","reducer","acc","index","_filter","_isObject","XFilter","_xfilter","_arrayReduce2","_filter2","_isObject2","_xfilter2","filter","filterable","_complement2","reject","_includes2","_map2","_quote2","_toISOString2","_reject","_toString","seen","recur","y","xs","mapPairs","k","sort","join","test","isNaN","NaN","from","Infinity","repr","_toString2","safeMax","maxByValue","maxByType","stringA","maxByStringValue","XMap","_xmap","_xmap2","map","isInteger","_isString","_isString2","nth","offset","charAt","_isInteger2","_nth","p","_isInteger","_prop","pluck","_isArrayLike","_isArrayLike2","symIterator","Symbol","iterator","_createReduce","arrayReduce","methodReduce","iterableReduce","reduce","TypeError","_xArrayReduce","bind","thisObj","_createReduce2","_xArrayReduce2","_bind","_xIterableReduce","step","_xMethodReduce","methodName","_xReduce","XWrap","_xwrap","_xReduce2","_xwrap2","_max","_pluck","_reduce","allPass","preds","always","and","XAny","any","_xany","_xany2","anyPass","_iterableReduce","_methodReduce","_reduce2","ap","applyF","applyX","_aperture","limit","XAperture","pos","full","store","getCopy","_xaperture","_aperture2","_xaperture2","aperture","append","el","props","vals","_apply","_values","mapValues","applySpec","spec","v","applyTo","ascend","aa","bb","_assoc","arr","isNil","_assoc2","_isNil","assocPath","path","nextObj","_assocPath","assoc","nAry","_nAry","binary","_isFunction","_ap","liftN","arity","lifted","_liftN","lift","_isFunction2","_and","_lift","both","g","_makeFlat","recursive","flatt","jlen","j","ilen","_forceReduced","_forceReduced2","tInit","tStep","tResult","XPreservingReduced","ret","XFlatCat","_flatCat","_flatCat2","_xchain","_makeFlat2","_xchain2","chain","monad","clamp","min","_cloneRegExp","pattern","RegExp","flags","dotAll","_cloneRegExp2","_clone","deep","_ObjectMap","_isPrimitive","copy","copiedValue","cachedCopy","get","set","create","getPrototypeOf","param","hashedKey","hash","bucket","i","element","_clone2","clone","collectBy","group","o","tag","newList","comparator","not","_not","complement","_pipe","_checkForMethod","methodname","_checkForMethod2","fromIndex","toIndex","_slice","tail","_pipe2","_tail","pipe","reverse","split","_reverse","compose","head","_identity","_identity2","identity","_head","pipeWith","headList","tailList","_pipeWith","composeWith","cond","pairs","pair","curry","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","_constructN","construct","converge","after","fns","context","count","e","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xreduceBy","_xreduceBy2","reduceBy","elt","_reduceBy","countBy","elem","_add","dec","defaultTo","descend","_Set","_nativeSet","Set","_items","hasOrAdd","has","shouldAdd","prevSize","bIdx","_Set2","difference","first","second","out","firstLen","secondLen","toFilterOut","differenceWith","remove","start","splice","_remove","_dissoc","_dissoc2","_shallowCloneObject","dissocPath","_dissocPath","dissoc","divide","XDrop","_xdrop","_xdrop2","drop","XTake","_xtake","_xtake2","take","_take","dropLast","XDropLast","_xdropLast","_dropLast2","_xdropLast2","_dropLast","dropLastWhile","XDropLastWhile","retained","retain","flush","_xdropLastWhile","_dropLastWhile2","_xdropLastWhile2","_dropLastWhile","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropRepeatsWith","last","_xdropRepeatsWith2","_last","dropRepeatsWith","_dropRepeatsWith","dropRepeats","eqBy","_eqBy","dropRepeatsBy","XDropWhile","_xdropWhile","_xdropWhile2","dropWhile","or","_or","either","_isTypedArray","_isTypedArray2","empty","_drop","takeLast","_takeLast","endsWith","suffix","eqProps","obj1","obj2","evolve","transformations","object","transformation","XFind","found","_xfind","_xfind2","find","XFindIndex","_xfindIndex","_xfindIndex2","findIndex","XFindLast","_xfindLast","_xfindLast2","findLast","XFindLastIndex","lastIdx","_xfindLastIndex","_xfindLastIndex2","findLastIndex","flatten","flip","forEach","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","hasPath","_path","_hasPath","hasIn","identical","unaryIdentical","ifElse","condition","onTrue","onFalse","inc","includes","indexBy","target","innerJoin","ys","insert","insertAll","elts","XUniqBy","_xuniqBy","_xuniqBy2","uniqBy","appliedItem","_uniqBy","uniq","_uniq","intersection","list1","list2","toKeep","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_objectAssign2","_objOf","_stepCatArray","_stepCatString","_stepCatObject","_stepCat","_stepCat2","into","invert","invertObj","invoker","method","Ctor","_empty","isEmpty","isNotNil","_invoker","_converge","juxt","keysIn","lastIndexOf","_isNumber","_isNumber2","lens","getter","setter","toFunctorFn","focus","_adjust","_always","update","_lens","_update","lensIndex","paths","pathsArray","_paths","pathAr","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","str","mathMod","m","maxBy","resultB","sum","_sum","mean","_mean","median","width","memoizeWith","keyGen","cache","mergeAll","mergeWithKey","l","r","_mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","_mergeDeepWithKey","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeLeft","mergeRight","mergeWith","_","_l","_r","safeMin","minByValue","minByType","minByStringValue","_min","minBy","_modify","_modify2","modifyPath","_modifyPath","modify","modulo","move","to","positiveFrom","positiveTo","multiply","_mergeDeepRight","partialObject","negate","_all","none","nthArg","of","omit","names","on","once","called","_assertPromise","then","_assertPromise2","otherwise","Identity","over","fst","snd","_createPartialApplicator","_createPartialApplicator2","partial","_flip","partialRight","_juxt","partition","_path2","pathEq","_defaultTo","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","prepend","_multiply","product","useWith","transformers","_pickAll","_useWith","project","_promap","profunctor","_promap2","XPromap","_xpromap","_xpromap2","promap","propEq","_is","propIs","propOr","propSatisfies","ps","range","reduceRight","reduceWhile","reduced","times","RangeError","_times","repeat","regex","replacement","XScan","_xscan","_xscan2","scan","_prepend","_reduceRight","sequence","traversable","TypeRep","traverse","_over","sortBy","sortWith","_length","splitAt","array","splitEvery","splitWhen","prefix","splitWhenever","curr","startsWith","subtract","swapObject","indexA","indexB","properties","getOwnPropertyNames","tmp","swapList","positiveIndexA","positiveIndexB","positiveMin","positiveMax","swapString","swap","_difference","symmetricDifference","_differenceWith","symmetricDifferenceWith","takeLastWhile","XTakeWhile","_xtakeWhile","_xtakeWhile2","takeWhile","XTap","_xtap","_xtap2","tap","_isRegExp","_isRegExp2","andThen","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","_sequence","ws","zeroWidth","hasProtoTrim","trim","beginRx","endRx","tryCatch","tryer","catcher","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","_compose","union","XUniqWith","items","_xuniqWith","_xuniqWith2","uniqWith","_uniqWith","unionWith","unless","whenFalseFn","_chain","unnest","until","unwind","valuesIn","vs","Const","view","when","whenTrueFn","where","testObj","whereAny","_where","whereEq","without","toRemove","xor","Boolean","xprod","zip","rv","zipObj","zipWith","thunkify","fnArgs","_F","_T","_addIndex","_addIndexRight","_allPass","_any","_anyPass","_append","_applySpec","_applyTo","_ascend","_binary","_both","_call","_clamp","_collectBy","_comparator","_composeWith","_cond","_construct","_count","_countBy","_dec","_descend","_divide","_dropRepeats","_dropRepeatsBy","_dropWhile","_either","_endsWith","_eqProps","_evolve","_find","_findIndex","_findLast","_findLastIndex","_flatten","_forEach","_forEachObjIndexed","_fromPairs","_groupBy","_groupWith","_gt","_gte","_hasIn","_identical","_ifElse","_inc","_indexBy","_init","_innerJoin","_insert","_insertAll","_intersection","_intersperse","_into","_invert","_invertObj","_isEmpty","_isNotNil","_join","_keysIn","_lastIndexOf","_lensIndex","_lensPath","_lensProp","_lt","_lte","_mapAccum","_mapAccumRight","_mapObjIndexed","_match","_mathMod","_maxBy","_median","_memoizeWith","_mergeAll","_mergeDeepLeft","_mergeDeepWith","_mergeLeft","_mergeRight","_mergeWith","_minBy","_modulo","_move","_partialObject","_negate","_none","_nthArg","_o","_of","_omit","_on","_once","_otherwise","_pair","_partial","_partialRight","_partition","_pathEq","_pathOr","_pathSatisfies","_pick","_pickBy","_product","_project","_propEq","_propIs","_propOr","_propSatisfies","_props","_range","_reduceWhile","_repeat","_replace","_scan","_set","_sort","_sortBy","_sortWith","_split","_splitAt","_splitEvery","_splitWhen","_splitWhenever","_startsWith","_subtract","_swap","_symmetricDifference","_symmetricDifferenceWith","_takeLastWhile","_takeWhile","_tap","_test","_andThen","_toLower","_toPairs","_toPairsIn","_toUpper","_transduce","_transpose","_traverse","_trim","_tryCatch","_unapply","_unary","_uncurryN","_unfold","_union","_unionWith","_unless","_unnest","_until","_unwind","_valuesIn","_view","_when","_whereAny","_whereEq","_without","_xor","_xprod","_zip","_zipObj","_zipWith","_thunkify"],"mappings":"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","file":"utf-8-checker.dbd21df2.js","sourceRoot":"..","sourcesContent":["/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\n\nexport default F;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    var hasPlaceholder = false;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      } else {\n        hasPlaceholder = true;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return !hasPlaceholder && left <= 0 ? fn.apply(this, combined) : _arity(Math.max(0, left), _curryN(length, combined, fn));\n  };\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _concat from \"./internal/_concat.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig (((a ...) -> b) ... -> [a] -> *) -> (((a ..., Int, [a]) -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;","import _concat from \"./internal/_concat.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * As with `addIndex`, `addIndexRight` creates a new list iteration function\n * from an existing one by adding two new parameters to its callback function:\n * the current index, and the entire list.\n *\n * Unlike `addIndex`, `addIndexRight` iterates from the right to the left.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const revmap = (fn, ary) => R.map(fn, R.reverse(ary));\n *      const revmapIndexed = R.addIndexRight(revmap);\n *      revmapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> [ '5-r', '4-a', '3-b', '2-o', '1-o', '0-f' ]\n */\n\nvar addIndexRight =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var idx = list.length - 1;\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx -= 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndexRight;","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  var len = list.length;\n\n  if (idx >= len || idx < -len) {\n    return list;\n  }\n\n  var _idx = (len + idx) % len;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[arguments.length - 1];\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nexport default function _xall(f) {\n  return function (xf) {\n    return new XAll(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xall from \"./internal/_xall.js\";\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig * -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(async () => {}); //=> \"AsyncFunction\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _arrayReduce(reducer, acc, list) {\n  var index = 0;\n  var length = list.length;\n\n  while (index < length) {\n    acc = reducer(acc, list[index]);\n    index += 1;\n  }\n\n  return acc;\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _xfBase from \"./_xfBase.js\";\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nexport default function _xfilter(f) {\n  return function (xf) {\n    return new XFilter(f, xf);\n  };\n}","import _arrayReduce from \"./internal/_arrayReduce.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @category Object\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _arrayReduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 !== 0;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","import _includes from \"./_includes.js\";\nimport _map from \"./_map.js\";\nimport _quote from \"./_quote.js\";\nimport _toISOString from \"./_toISOString.js\";\nimport keys from \"../keys.js\";\nimport reject from \"../reject.js\";\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Map]':\n      return 'new Map(' + recur(Array.from(x)) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object Set]':\n      return 'new Set(' + recur(Array.from(x).sort()) + ')';\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _curry2 from \"./internal/_curry2.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  if (a === b) {\n    return b;\n  }\n\n  function safeMax(x, y) {\n    if (x > y !== y > x) {\n      return y > x ? y : x;\n    }\n\n    return undefined;\n  }\n\n  var maxByValue = safeMax(a, b);\n\n  if (maxByValue !== undefined) {\n    return maxByValue;\n  }\n\n  var maxByType = safeMax(typeof a, typeof b);\n\n  if (maxByType !== undefined) {\n    return maxByType === typeof a ? a : b;\n  }\n\n  var stringA = toString(a);\n  var maxByStringValue = safeMax(stringA, toString(b));\n\n  if (maxByStringValue !== undefined) {\n    return maxByStringValue === stringA ? a : b;\n  }\n\n  return b;\n});\n\nexport default max;","import _xfBase from \"./_xfBase.js\";\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = function _xmap(f) {\n  return function (xf) {\n    return new XMap(f, xf);\n  };\n};\n\nexport default _xmap;","import _arrayReduce from \"./internal/_arrayReduce.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _arrayReduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n\n  return _isInteger(p) ? nth(p, obj) : obj[p];\n});\n\nexport default prop;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.project, R.prop, R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","import _isArrayLike from \"./_isArrayLike.js\";\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _createReduce(arrayReduce, methodReduce, iterableReduce) {\n  return function _reduce(xf, acc, list) {\n    if (_isArrayLike(list)) {\n      return arrayReduce(xf, acc, list);\n    }\n\n    if (list == null) {\n      return acc;\n    }\n\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return methodReduce(xf, acc, list, 'fantasy-land/reduce');\n    }\n\n    if (list[symIterator] != null) {\n      return iterableReduce(xf, acc, list[symIterator]());\n    }\n\n    if (typeof list.next === 'function') {\n      return iterableReduce(xf, acc, list);\n    }\n\n    if (typeof list.reduce === 'function') {\n      return methodReduce(xf, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}","export default function _xArrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","import _createReduce from \"./_createReduce.js\";\nimport _xArrayReduce from \"./_xArrayReduce.js\";\nimport bind from \"../bind.js\";\n\nfunction _xIterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _xMethodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar _xReduce =\n/*#__PURE__*/\n_createReduce(_xArrayReduce, _xMethodReduce, _xIterableReduce);\n\nexport default _xReduce;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Be cautious of mutating and returning the accumulator. If you reuse it across\n * invocations, it will continue to accumulate onto the same value. The general\n * recommendation is to always return a new value. If you can't do so for\n * performance reasons, then be sure to reinitialize the accumulator on each\n * invocation.\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(function (xf, acc, list) {\n  return _xReduce(typeof xf === 'function' ? _xwrap(xf) : xf, acc, list);\n});\n\nexport default reduce;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass, R.both\n * @example\n *\n *      const isQueen = R.propEq('Q', 'rank');\n *      const isSpade = R.propEq('♠︎', 'suit');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is falsy, otherwise the second argument.\n * Acts as the boolean `and` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.both, R.or\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;","import _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nexport default function _xany(f) {\n  return function (xf) {\n    return new XAny(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xany from \"./internal/_xany.js\";\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass, R.either\n * @example\n *\n *      const isClub = R.propEq('♣', 'suit');\n *      const isSpade = R.propEq('♠', 'suit');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;","import _arrayReduce from \"./_arrayReduce.js\";\nimport _createReduce from \"./_createReduce.js\";\n\nfunction _iterableReduce(reducer, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = reducer(acc, step.value);\n    step = iter.next();\n  }\n\n  return acc;\n}\n\nfunction _methodReduce(reducer, acc, obj, methodName) {\n  return obj[methodName](reducer, acc);\n}\n\nvar _reduce =\n/*#__PURE__*/\n_createReduce(_arrayReduce, _methodReduce, _iterableReduce);\n\nexport default _reduce;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport map from \"./map.js\";\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the first argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}","import _concat from \"./_concat.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nexport default function _xaperture(n) {\n  return function (xf) {\n    return new XAperture(n, xf);\n  };\n}","import _aperture from \"./internal/_aperture.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xaperture from \"./internal/_xaperture.js\";\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys, R.toPairs\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry1 from \"./internal/_curry1.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport apply from \"./apply.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\nimport keys from \"./keys.js\";\nimport values from \"./values.js\"; // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\nfunction mapValues(fn, obj) {\n  return _isArray(obj) ? obj.map(fn) : keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;","import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _assoc(prop, val, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = val;\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n}","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) && typeof obj[idx] === 'object' ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  return _assoc(idx, val, obj);\n});\n\nexport default assocPath;","import _curry3 from \"./internal/_curry3.js\";\nimport assocPath from \"./assocPath.js\";\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> a -> {k: v} -> {k: v}\n * @param {String|Number} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  return assocPath([prop], val, obj);\n});\n\nexport default assoc;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> ((a, b) -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;","export default function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _arrayReduce from \"./internal/_arrayReduce.js\";\nimport ap from \"./ap.js\";\nimport curryN from \"./curryN.js\";\nimport map from \"./map.js\";\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _arrayReduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","import _curry1 from \"./internal/_curry1.js\";\nimport liftN from \"./liftN.js\";\n/**\n * \"lifts\" a function of arity >= 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([100, 200], [30, 40], [5, 6, 7]); //=> [135, 136, 137, 145, 146, 147, 235, 236, 237, 245, 246, 247]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([10, 20], [1], [2, 3], [4], [100, 200]); //=> [117, 217, 118, 218, 127, 227, 128, 228]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport and from \"./and.js\";\nimport lift from \"./lift.js\";\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.either, R.allPass, R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig ((*... -> a), *...) -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(\n *        R.repeat(' '),\n *        R.join(''),\n *        R.replace(/^(?!$)/gm)\n *      );\n *\n *      const format = R.converge(\n *        R.call,\n *        [\n *          R.pipe(R.prop('indent'), indentN),\n *          R.prop('value')\n *        ]\n *      );\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\n_curry1(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n\nexport default call;","import _isArrayLike from \"./_isArrayLike.js\";\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from \"./_forceReduced.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _xArrayReduce from \"./_xArrayReduce.js\";\nimport _xReduce from \"./_xReduce.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar tInit = '@@transducer/init';\nvar tStep = '@@transducer/step';\nvar tResult = '@@transducer/result';\n\nvar XPreservingReduced =\n/*#__PURE__*/\nfunction () {\n  function XPreservingReduced(xf) {\n    this.xf = xf;\n  }\n\n  XPreservingReduced.prototype[tInit] = _xfBase.init;\n  XPreservingReduced.prototype[tResult] = _xfBase.result;\n\n  XPreservingReduced.prototype[tStep] = function (result, input) {\n    var ret = this.xf[tStep](result, input);\n    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n  };\n\n  return XPreservingReduced;\n}();\n\nvar XFlatCat =\n/*#__PURE__*/\nfunction () {\n  function XFlatCat(xf) {\n    this.xf = new XPreservingReduced(xf);\n  }\n\n  XFlatCat.prototype[tInit] = _xfBase.init;\n  XFlatCat.prototype[tResult] = _xfBase.result;\n\n  XFlatCat.prototype[tStep] = function (result, input) {\n    return !_isArrayLike(input) ? _xArrayReduce(this.xf, result, [input]) : _xReduce(this.xf, result, input);\n  };\n\n  return XFlatCat;\n}();\n\nvar _flatCat = function _xcat(xf) {\n  return new XFlatCat(xf);\n};\n\nexport default _flatCat;","import _flatCat from \"./_flatCat.js\";\nimport _xmap from \"./_xmap.js\";\nexport default function _xchain(f) {\n  return function (xf) {\n    return _xmap(f)(_flatCat(xf));\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\nimport _xchain from \"./internal/_xchain.js\";\nimport map from \"./map.js\";\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, pattern.flags ? pattern.flags : (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : '') + (pattern.dotAll ? 's' : ''));\n}","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, deep, map) {\n  map || (map = new _ObjectMap()); // this avoids the slower switch with a quick if decision removing some milliseconds in each run.\n\n  if (_isPrimitive(value)) {\n    return value;\n  }\n\n  var copy = function copy(copiedValue) {\n    // Check for circular and same references on the object graph and return its corresponding clone.\n    var cachedCopy = map.get(value);\n\n    if (cachedCopy) {\n      return cachedCopy;\n    }\n\n    map.set(value, copiedValue);\n\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        copiedValue[key] = deep ? _clone(value[key], true, map) : value[key];\n      }\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n\n    default:\n      return value;\n  }\n}\n\nfunction _isPrimitive(param) {\n  var type = typeof param;\n  return param == null || type != 'object' && type != 'function';\n}\n\nvar _ObjectMap =\n/*#__PURE__*/\nfunction () {\n  function _ObjectMap() {\n    this.map = {};\n    this.length = 0;\n  }\n\n  _ObjectMap.prototype.set = function (key, value) {\n    const hashedKey = this.hash(key);\n    let bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      this.map[hashedKey] = bucket = [];\n    }\n\n    bucket.push([key, value]);\n    this.length += 1;\n  };\n\n  _ObjectMap.prototype.hash = function (key) {\n    let hashedKey = [];\n\n    for (var value in key) {\n      hashedKey.push(Object.prototype.toString.call(key[value]));\n    }\n\n    return hashedKey.join();\n  };\n\n  _ObjectMap.prototype.get = function (key) {\n    /**\n     * depending on the number of objects to be cloned is faster to just iterate over the items in the map just because the hash function is so costly,\n     * on my tests this number is 180, anything above that using the hash function is faster.\n     */\n    if (this.length <= 180) {\n      for (const p in this.map) {\n        const bucket = this.map[p];\n\n        for (let i = 0; i < bucket.length; i += 1) {\n          const element = bucket[i];\n\n          if (element[0] === key) {\n            return element[1];\n          }\n        }\n      }\n\n      return;\n    }\n\n    const hashedKey = this.hash(key);\n    const bucket = this.map[hashedKey];\n\n    if (!bucket) {\n      return;\n    }\n\n    for (let i = 0; i < bucket.length; i += 1) {\n      const element = bucket[i];\n\n      if (element[0] === key) {\n        return element[1];\n      }\n    }\n  };\n\n  return _ObjectMap;\n}();","import _clone from \"./internal/_clone.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a deep copy of the source that can be used in place of the source\n * object without retaining any references to it.\n * The source object may contain (nested) `Array`s and `Object`s,\n * `Number`s, `String`s, `Boolean`s and `Date`s.\n * `Function`s are assigned by reference rather than copied.\n *\n * Dispatches to a `clone` method if present.\n *\n * Note that if the source object has multiple nodes that share a reference,\n * the returned object will have the same structure, but the references will\n * be pointed to the location within the cloned value.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, true);\n});\n\nexport default clone;","import _curry2 from \"./internal/_curry2.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Splits a list into sub-lists, based on the result of calling a key-returning function on each element,\n * and grouping the results according to values returned.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> [[b]]\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Array}\n *    An array of arrays where each sub-array contains items for which\n *    the String-returning function has returned the same value.\n * @see R.groupBy, R.partition\n * @example\n *      R.collectBy(R.prop('type'), [\n *        {type: 'breakfast', item: '☕️'},\n *        {type: 'lunch', item: '🌯'},\n *        {type: 'dinner', item: '🍝'},\n *        {type: 'breakfast', item: '🥐'},\n *        {type: 'lunch', item: '🍕'}\n *      ]);\n *\n *      // [ [ {type: 'breakfast', item: '☕️'},\n *      //     {type: 'breakfast', item: '🥐'} ],\n *      //   [ {type: 'lunch', item: '🌯'},\n *      //     {type: 'lunch', item: '🍕'} ],\n *      //   [ {type: 'dinner', item: '🍝'} ] ]\n */\n\nvar collectBy =\n/*#__PURE__*/\n_curry2(function collectBy(fn, list) {\n  var group = _reduce(function (o, x) {\n    var tag = fn(x);\n\n    if (o[tag] === undefined) {\n      o[tag] = [];\n    }\n\n    o[tag].push(x);\n    return o;\n  }, {}, list);\n\n  var newList = [];\n\n  for (var tag in group) {\n    newList.push(group[tag]);\n  }\n\n  return newList;\n});\n\nexport default collectBy;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nexport default comparator;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import lift from \"./lift.js\";\nimport not from \"./not.js\";\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      R.isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      R.isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n * @symb R.pipe(f, g, h)(a)(b) = h(g(f(a)))(b)\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import pipe from \"./pipe.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n * @symb R.compose(f, g, h)(a)(b) = f(g(h(a)))(b)\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import nth from \"./nth.js\";\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport head from \"./head.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport tail from \"./tail.js\";\nimport identity from \"./identity.js\";\n/**\n * Performs left-to-right function composition using transforming function. The first function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried. Transforming function is not used on the\n * first argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to pipe\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, g(...args)))\n */\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nexport default pipeWith;","import _curry2 from \"./internal/_curry2.js\";\nimport pipeWith from \"./pipeWith.js\";\nimport reverse from \"./reverse.js\";\n/**\n * Performs right-to-left function composition using transforming function. The last function may have\n * any arity; the remaining functions must be unary. Unlike `compose`, functions are passed in an array.\n *\n * **Note:** The result of composeWith is not automatically curried. Transforming function is not used\n * on the last argument.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {Function} transformer The transforming function\n * @param {Array} functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, i(...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport _isString from \"./internal/_isString.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport map from \"./map.js\";\nimport max from \"./max.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * **Please note**: This is not a direct substitute for a `switch` statement.\n * Remember that both elements of every pair passed to `cond` are *functions*,\n * and `cond` returns a function.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * Please note that default parameters don't count towards a [function arity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length)\n * and therefore `curry` won't work well with those.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n *\n *      // R.curry not working well with default parameters\n *      const h = R.curry((a, b, c = 2) => a + b + c);\n *      h(1)(2)(7); //=> Error! (`3` is not a function!)\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import _curry2 from \"./internal/_curry2.js\";\nimport curry from \"./curry.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (n) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;","import _curry1 from \"./internal/_curry1.js\";\nimport constructN from \"./constructN.js\";\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;","import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _reduce from \"./internal/_reduce.js\";\nimport curry from \"./curry.js\";\n/**\n * Returns the number of items in a given `list` matching the predicate `f`\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} predicate to match items against\n * @return {Array} list of items to count in\n * @example\n *\n *      const even = x => x % 2 == 0;\n *\n *      R.count(even, [1, 2, 3, 4, 5]); // => 2\n *      R.map(R.count(even), [[1, 1, 1], [2, 3, 4, 5], [6]]); // => [0, 2, 1]\n */\n\nvar count =\n/*#__PURE__*/\ncurry(function (pred, list) {\n  return _reduce(function (a, e) {\n    return pred(e) ? a + 1 : a;\n  }, 0, list);\n});\nexport default count;","import _clone from \"./_clone.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, _clone(this.valueAcc, false)];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nexport default function _xreduceBy(valueFn, valueAcc, keyFn) {\n  return function (xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  };\n}","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  var xf = _xwrap(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, false), elt);\n\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n\n    acc[key] = value;\n    return acc;\n  });\n\n  return _xReduce(xf, {}, list);\n}));\n\nexport default reduceBy;","import reduceBy from \"./reduceBy.js\";\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from \"./add.js\";\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nexport default dec;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;","import _includes from \"./_includes.js\";\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import _curry2 from \"./internal/_curry2.js\";\nimport _Set from \"./internal/_Set.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n *\n *      R.differenceWith(R.equals, [1, 2, 3, 3, 3], []); //=> [1, 2, 3]\n *      R.differenceWith(R.equals, [1, 2, 3, 3, 3], [1]); //=> [2, 3]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _isInteger from \"./_isInteger.js\";\nimport _isArray from \"./_isArray.js\";\nimport remove from \"../remove.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @private\n * @param {String|Number} prop The name of the property to dissociate\n * @param {Object|Array} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n */\n\nexport default function _dissoc(prop, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (_isInteger(prop) && _isArray(obj)) {\n    return remove(prop, 1, obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dissoc from \"./internal/_dissoc.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport assoc from \"./assoc.js\";\n/**\n * Makes a shallow clone of an object. Note that this copies and flattens\n * prototype properties onto the new object as well. All non-primitive\n * properties are copied by reference.\n *\n * @private\n * @param {String|Integer} prop The prop operating\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original.\n */\n\nfunction _shallowCloneObject(prop, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    return [].concat(obj);\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  return result;\n}\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return _shallowCloneObject(head, obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","import _curry2 from \"./internal/_curry2.js\";\nimport dissocPath from \"./dissocPath.js\";\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  return dissocPath([prop], obj);\n});\n\nexport default dissoc;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;","import _xfBase from \"./_xfBase.js\";\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nexport default function _xdrop(n) {\n  return function (xf) {\n    return new XDrop(n, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdrop from \"./internal/_xdrop.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","import _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nexport default function _xtake(n) {\n  return function (xf) {\n    return new XTake(n, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtake from \"./internal/_xtake.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;","import take from \"../take.js\";\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _xfBase from \"./_xfBase.js\";\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    if (n <= 0) {\n      return xf;\n    }\n\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nexport default function _xdropLast(n) {\n  return function (xf) {\n    return new XDropLast(n, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLast from \"./internal/_dropLast.js\";\nimport _xdropLast from \"./internal/_xdropLast.js\";\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;","import slice from \"../slice.js\";\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}","import _xfBase from \"./_xfBase.js\";\nimport _xReduce from \"./_xReduce.js\";\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _xReduce(this.xf, result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nexport default function _xdropLastWhile(fn) {\n  return function (xf) {\n    return new XDropLastWhile(fn, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _dropLastWhile from \"./internal/_dropLastWhile.js\";\nimport _xdropLastWhile from \"./internal/_xdropLastWhile.js\";\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;","import _xfBase from \"./_xfBase.js\";\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nexport default function _xdropRepeatsWith(pred) {\n  return function (xf) {\n    return new XDropRepeatsWith(pred, xf);\n  };\n}","import nth from \"./nth.js\";\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport last from \"./last.js\";\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;","import _curry1 from \"./internal/_curry1.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([], function () {\n  return _xdropRepeatsWith(equals);\n},\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropRepeatsWith from \"./internal/_xdropRepeatsWith.js\";\nimport dropRepeatsWith from \"./dropRepeatsWith.js\";\nimport eqBy from \"./eqBy.js\";\n/**\n * Returns a new list without any consecutively repeating elements,\n * based upon the value returned by applying the supplied function to\n * each list element. [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeatsBy(Math.abs, [1, -1, -1, 2, 3, -4, 4, 2, 2]); //=> [1, 2, 3, -4, 2]\n */\n\nvar dropRepeatsBy =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  return _dispatchable([], function () {\n    return _xdropRepeatsWith(eqBy(fn));\n  }, dropRepeatsWith(eqBy(fn)))(list);\n});\n\nexport default dropRepeatsBy;","import _xfBase from \"./_xfBase.js\";\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nexport default function _xdropWhile(f) {\n  return function (xf) {\n    return new XDropWhile(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xdropWhile from \"./internal/_xdropWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the first argument if it is truthy, otherwise the second argument.\n * Acts as the boolean `or` statement if both inputs are `Boolean`s.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any}\n * @see R.either, R.and\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport lift from \"./lift.js\";\nimport or from \"./or.js\";\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.both, R.anyPass, R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;","/**\n * Tests whether or not an object is a typed array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is a typed array, `false` otherwise.\n * @example\n *\n *      _isTypedArray(new Uint8Array([])); //=> true\n *      _isTypedArray(new Float32Array([])); //=> true\n *      _isTypedArray([]); //=> false\n *      _isTypedArray(null); //=> false\n *      _isTypedArray({}); //=> false\n */\nexport default function _isTypedArray(val) {\n  var type = Object.prototype.toString.call(val);\n  return type === '[object Uint8ClampedArray]' || type === '[object Int8Array]' || type === '[object Uint8Array]' || type === '[object Int16Array]' || type === '[object Uint16Array]' || type === '[object Int32Array]' || type === '[object Uint32Array]' || type === '[object Float32Array]' || type === '[object Float64Array]' || type === '[object BigInt64Array]' || type === '[object BigUint64Array]';\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _isArguments from \"./internal/_isArguments.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _isString from \"./internal/_isString.js\";\nimport _isTypedArray from \"./internal/_isTypedArray.js\";\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`),\n * TypedArray (`Uint8Array []`, `Float32Array []`, etc), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));               //=> Nothing()\n *      R.empty([1, 2, 3]);              //=> []\n *      R.empty('unicorns');             //=> ''\n *      R.empty({x: 1, y: 2});           //=> {}\n *      R.empty(Uint8Array.from('123')); //=> Uint8Array []\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : _isTypedArray(x) ? x.constructor.from('') : void 0 // else\n  ;\n});\n\nexport default empty;","import _curry2 from \"./internal/_curry2.js\";\nimport drop from \"./drop.js\";\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport takeLast from \"./takeLast.js\";\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","import _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nexport default function _xfind(f) {\n  return function (xf) {\n    return new XFind(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq(2, 'a'))(xs); //=> {a: 2}\n *      R.find(R.propEq(4, 'a'))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nexport default function _xfindIndex(f) {\n  return function (xf) {\n    return new XFindIndex(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindIndex from \"./internal/_xfindIndex.js\";\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.indexOf\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq(2, 'a'))(xs); //=> 1\n *      R.findIndex(R.propEq(4, 'a'))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","import _xfBase from \"./_xfBase.js\";\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nexport default function _xfindLast(f) {\n  return function (xf) {\n    return new XFindLast(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLast from \"./internal/_xfindLast.js\";\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq(1, 'a'))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq(4, 'a'))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;","import _xfBase from \"./_xfBase.js\";\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nexport default function _xfindLastIndex(f) {\n  return function (xf) {\n    return new XFindLastIndex(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfindLastIndex from \"./internal/_xfindLastIndex.js\";\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce, R.lastIndexOf\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq(1, 'a'))(xs); //=> 1\n *      R.findLastIndex(R.propEq(4, 'a'))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _curry1 from \"./internal/_curry1.js\";\nimport _makeFlat from \"./internal/_makeFlat.js\";\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;","import _curry2 from \"./internal/_curry2.js\";\nimport keys from \"./keys.js\";\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy, R.collectBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\n\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * const isVowel = R.test(/^[aeiou]$/i);\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nexport default gt;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nexport default gte;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default hasPath;","import _curry2 from \"./internal/_curry2.js\";\nimport hasPath from \"./hasPath.js\";\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nexport default has;","import _curry2 from \"./internal/_curry2.js\";\nimport isNil from \"./isNil.js\";\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  if (isNil(obj)) {\n    return false;\n  }\n\n  return prop in obj;\n});\n\nexport default hasIn;","import _objectIs from \"./internal/_objectIs.js\";\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * `identical` does not support the `__` placeholder.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical = function (a, b) {\n  switch (arguments.length) {\n    case 0:\n      return identical;\n\n    case 1:\n      return function () {\n        return function unaryIdentical(_b) {\n          switch (arguments.length) {\n            case 0:\n              return unaryIdentical;\n\n            default:\n              return _objectIs(a, _b);\n          }\n        };\n      }();\n\n    default:\n      return _objectIs(a, b);\n  }\n}; // In order to support Cross-origin Window objects as arguments to identical,\n// it cannot be implemented as _curry2(_objectIs).\n// The reason is that _curry2 checks if a function argument is the placeholder __\n// by accessing a paritcular property. However, across URL origins access\n// to most properties of Window is forbidden.\n\n\nexport default identical;","import _curry3 from \"./internal/_curry3.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * Note that `ifElse` takes its arity from the longest of the three functions passed to it.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({ count: 1 }); //=> { count: 2 }\n *      incCount({});           //=> { count: 1 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import add from \"./add.js\";\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nexport default inc;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Also works with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default includes;","import reduceBy from \"./reduceBy.js\";\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: b}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @see R.groupBy\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from \"./internal/_curry2.js\";\nimport _indexOf from \"./internal/_indexOf.js\";\nimport _isArray from \"./internal/_isArray.js\";\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf, R.findIndex\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;","import slice from \"./slice.js\";\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nexport default init;","import _includesWith from \"./internal/_includesWith.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _filter from \"./internal/_filter.js\";\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nexport default insert;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;","import _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqBy =\n/*#__PURE__*/\nfunction () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XUniqBy;\n}();\n\nexport default function _xuniqBy(f) {\n  return function (xf) {\n    return new XUniqBy(f, xf);\n  };\n}","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqBy;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _curry2 from \"./internal/_curry2.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _Set from \"./internal/_Set.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var toKeep = new _Set();\n\n  for (var i = 0; i < list1.length; i += 1) {\n    toKeep.add(list1[i]);\n  }\n\n  return uniq(_filter(toKeep.has.bind(toKeep), list2));\n});\n\nexport default intersection;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\n\nvar intersperse =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n}));\n\nexport default intersperse;","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _objectAssign from \"./_objectAssign.js\";\nimport _identity from \"./_identity.js\";\nimport _isArrayLike from \"./_isArrayLike.js\";\nimport _isTransformer from \"./_isTransformer.js\";\nimport objOf from \"../objOf.js\";\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _isTransformer from \"./internal/_isTransformer.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _stepCat from \"./internal/_stepCat.js\";\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, transducer, list) {\n  var xf = transducer(_isTransformer(acc) ? acc : _stepCat(acc));\n  return _xReduce(xf, xf['@@transducer/init'](), list);\n});\n\nexport default into;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport keys from \"./keys.js\";\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","import _curry1 from \"./internal/_curry1.js\";\nimport keys from \"./keys.js\";\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","import _curry2 from \"./internal/_curry2.js\";\nimport _isFunction from \"./internal/_isFunction.js\";\nimport curryN from \"./curryN.js\";\nimport toString from \"./toString.js\";\n/**\n * Given an `arity` (Number) and a `name` (String) the `invoker` function\n * returns a curried function that takes `arity` arguments and a `context`\n * object. It will \"invoke\" the `name`'d function (a method) on the `context`\n * object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *      // A function with no arguments\n *      const asJson = invoker(0, \"json\")\n *      // Just like calling .then((response) => response.json())\n *      fetch(\"http://example.com/index.json\").then(asJson)\n *\n *      // A function with one argument\n *      const sliceFrom = invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *\n *      // A function with two arguments\n *      const sliceFrom6 = invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      // NOTE: You can't simply pass some of the arguments to the initial invoker function.\n *      const firstCreditCardSection = invoker(2, \"slice\", 0, 4)\n *      firstCreditCardSection(\"4242 4242 4242 4242\") // => Function<...>\n *\n *      // Since invoker returns a curried function, you may partially apply it to create the function you need.\n *      const firstCreditCardSection = invoker(2, \"slice\")(0, 4)\n *      firstCreditCardSection(\"4242 4242 4242 4242\") // => \"4242\"\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * See if an object (i.e. `val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n * If `val` was created using `Object.create`, `R.is(Object, val) === true`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val instanceof Ctor || val != null && (val.constructor === Ctor || Ctor.name === 'Object' && typeof val === 'object');\n});\n\nexport default is;","import _curry1 from \"./internal/_curry1.js\";\nimport empty from \"./empty.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);           //=> false\n *      R.isEmpty([]);                  //=> true\n *      R.isEmpty('');                  //=> true\n *      R.isEmpty(null);                //=> false\n *      R.isEmpty({});                  //=> true\n *      R.isEmpty({length: 0});         //=> false\n *      R.isEmpty(Uint8Array.from('')); //=> true\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import isNil from \"./isNil.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is not `null` and not `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is not `undefined` or not `null`, otherwise `false`.\n * @example\n *\n *      R.isNotNil(null); //=> false\n *      R.isNotNil(undefined); //=> false\n *      R.isNotNil(0); //=> true\n *      R.isNotNil([]); //=> true\n */\n\nvar isNotNil =\n/*#__PURE__*/\n_curry1(function isNotNil(x) {\n  return !isNil(x);\n});\n\nexport default isNotNil;","import invoker from \"./invoker.js\";\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;","import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nexport default keysIn;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf, R.findLastIndex\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry3 from \"./internal/_curry3.js\";\nimport adjust from \"./adjust.js\";\nimport always from \"./always.js\";\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nexport default update;","import _curry1 from \"./internal/_curry1.js\";\nimport lens from \"./lens.js\";\nimport nth from \"./nth.js\";\nimport update from \"./update.js\";\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over, R.nth\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int | Symbol]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;","import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieves the value at a given path. The nodes of the path can be arbitrary strings or non-negative integers.\n * For anything else, the value is unspecified. Integer paths are meant to index arrays, strings are meant for objects.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig [Idx] -> {a} -> a | Undefined\n * @sig Idx = String | NonNegativeInt\n * @param {Array} path The path to use.\n * @param {Object} obj The object or array to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth, R.assocPath, R.dissocPath\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n *      R.path([2], {'2': 2}); //=> 2\n *      R.path([-2], {'-2': 'a'}); //=> undefined\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;","import _curry1 from \"./internal/_curry1.js\";\nimport assocPath from \"./assocPath.js\";\nimport lens from \"./lens.js\";\nimport path from \"./path.js\";\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","import _curry1 from \"./internal/_curry1.js\";\nimport assoc from \"./assoc.js\";\nimport lens from \"./lens.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nexport default lt;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nexport default lte;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccum;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccumRight;","import _arrayReduce from \"./internal/_arrayReduce.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport keys from \"./keys.js\";\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _arrayReduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;","import _curry3 from \"./internal/_curry3.js\";\nimport max from \"./max.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  var resultB = f(b);\n  return max(f(a), resultB) === resultB ? b : a;\n});\n\nexport default maxBy;","import add from \"./add.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;","import _curry1 from \"./internal/_curry1.js\";\nimport sum from \"./sum.js\";\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;","import _curry1 from \"./internal/_curry1.js\";\nimport mean from \"./mean.js\";\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a string-returning function `keyGen` and a function `fn` and returns\n * a new function that returns cached results for subsequent\n * calls with the same arguments.\n *\n * When the function is invoked, `keyGen` is applied to the same arguments\n * and its result becomes the cache key. If the cache contains something\n * under that key, the function simply returns it and does not invoke `fn` at all.\n *\n * Otherwise `fn` is applied to the same arguments and its return value\n * is cached under that key and returned by the function.\n *\n * Care must be taken when implementing `keyGen` to avoid key collision,\n * or if tracking references, memory leaks and mutating arguments.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} keyGen The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *      const withAge = memoizeWith(o => `${o.birth}/${o.death}`, ({birth, death}) => {\n *      //                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^\n *      //                          keyGen                        fn\n *        console.log(`computing age for ${birth}/${death}`);\n *        return ({birth, death, age: death - birth});\n *      });\n *\n *      withAge({birth: 1921, death: 1999});\n *      //=> LOG: computing age for 1921/1999\n *      //=> {birth: 1921, death: 1999, age: 78} (returned from fn)\n *\n *      withAge({birth: 1921, death: 1999});\n *      //=> {birth: 1921, death: 1999, age: 78} (returned from cache)\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(keyGen, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = keyGen.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates one new object with the own properties from a list of objects.\n * If a key exists in more than one object, the value from the last\n * object it exists in will be used.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;","import _curry3 from \"./internal/_curry3.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n  l = l || {};\n  r = r || {};\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;","import _curry3 from \"./internal/_curry3.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import _curry2 from \"./internal/_curry2.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeDeepWithKey from \"./mergeDeepWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;","import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default mergeRight;","import _curry3 from \"./internal/_curry3.js\";\nimport mergeWithKey from \"./mergeWithKey.js\";\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;","import _curry2 from \"./internal/_curry2.js\";\nimport toString from \"./toString.js\";\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  function safeMin(x, y) {\n    if (x < y !== y < x) {\n      return y < x ? y : x;\n    }\n\n    return undefined;\n  }\n\n  var minByValue = safeMin(a, b);\n\n  if (minByValue !== undefined) {\n    return minByValue;\n  }\n\n  var minByType = safeMin(typeof a, typeof b);\n\n  if (minByType !== undefined) {\n    return minByType === typeof a ? a : b;\n  }\n\n  var stringA = toString(a);\n  var minByStringValue = safeMin(stringA, toString(b));\n\n  if (minByStringValue !== undefined) {\n    return minByStringValue === stringA ? a : b;\n  }\n\n  return a;\n});\n\nexport default min;","import _curry3 from \"./internal/_curry3.js\";\nimport min from \"./min.js\";\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  var resultB = f(b);\n  return min(f(a), resultB) === resultB ? b : a;\n});\n\nexport default minBy;","import _isArray from \"./_isArray.js\";\nimport _isInteger from \"./_isInteger.js\";\n/**\n * Makes a shallow clone of an object, applying the given fn to the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @private\n * @param {String|Number} prop The property name to set\n * @param {Function} fn The function to apply to the property\n * @param {Object|Array} obj The object to clone\n * @return {Object|Array} A new object equivalent to the original except for the changed property.\n */\n\nexport default function _modify(prop, fn, obj) {\n  if (_isInteger(prop) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[prop] = fn(arr[prop]);\n    return arr;\n  }\n\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = fn(result[prop]);\n  return result;\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _has from \"./internal/_has.js\";\nimport _assoc from \"./internal/_assoc.js\";\nimport _modify from \"./internal/_modify.js\";\n/**\n * Creates a shallow clone of the passed object by applying an `fn` function\n * to the value at the given path.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding path does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig [Idx] -> (v -> v) -> {k: v} -> {k: v}\n * @param {Array} path The path to be modified.\n * @param {Function} fn The function to apply to the path.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', address: { zipCode: '90216' }};\n *      R.modifyPath(['address', 'zipCode'], R.reverse, person); //=> {name: 'James', address: { zipCode: '61209' }}\n *\n *      // Can handle arrays too\n *      const person = {name: 'James', addresses: [{ zipCode: '90216' }]};\n *      R.modifyPath(['addresses', 0, 'zipCode'], R.reverse, person); //=> {name: 'James', addresses: [{ zipCode: '61209' }]}\n */\n\nvar modifyPath =\n/*#__PURE__*/\n_curry3(function modifyPath(path, fn, object) {\n  if (!_isObject(object) && !_isArray(object)) {\n    return object;\n  }\n\n  if (path.length === 0) {\n    return fn(object);\n  }\n\n  var idx = path[0];\n\n  if (!_has(idx, object)) {\n    return object;\n  }\n\n  if (path.length === 1) {\n    return _modify(idx, fn, object);\n  }\n\n  var val = modifyPath(Array.prototype.slice.call(path, 1), fn, object[idx]);\n\n  if (val === object[idx]) {\n    return object;\n  }\n\n  return _assoc(idx, val, object);\n});\n\nexport default modifyPath;","import _curry3 from \"./internal/_curry3.js\";\nimport modifyPath from \"./modifyPath.js\";\n/**\n * Creates a copy of the passed object by applying an `fn` function to the given `prop` property.\n *\n * The function will not be invoked, and the object will not change\n * if its corresponding property does not exist in the object.\n * All non-primitive properties are copied to the new object by reference.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig Idx -> (v -> v) -> {k: v} -> {k: v}\n * @param {String|Number} prop The property to be modified.\n * @param {Function} fn The function to apply to the property.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const person = {name: 'James', age: 20, pets: ['dog', 'cat']};\n *      R.modify('age', R.add(1), person); //=> {name: 'James', age: 21, pets: ['dog', 'cat']}\n *      R.modify('pets', R.append('turtle'), person); //=> {name: 'James', age: 20, pets: ['dog', 'cat', 'turtle']}\n */\n\nvar modify =\n/*#__PURE__*/\n_curry3(function modify(prop, fn, object) {\n  return modifyPath([prop], fn, object);\n});\n\nexport default modify;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import mergeDeepRight from \"./mergeDeepRight.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a function `f` and an object, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the object\n * provided initially merged deeply (right) with the object provided as an argument to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (({ a, b, c, ..., n }) -> x) -> { a, b, c, ...} -> ({ d, e, f, ..., n } -> x)\n * @param {Function} f\n * @param {Object} props\n * @return {Function}\n * @see R.partial, R.partialRight, R.curry, R.mergeDeepRight\n * @example\n *\n *      const multiply2 = ({ a, b }) => a * b;\n *      const double = R.partialObject(multiply2, { a: 2 });\n *      double({ b: 2 }); //=> 4\n *\n *      const greet = ({ salutation, title, firstName, lastName }) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partialObject(greet, { salutation: 'Hello' });\n *      const sayHelloToMs = R.partialObject(sayHello, { title: 'Ms.' });\n *      sayHelloToMs({ firstName: 'Jane', lastName: 'Jones' }); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialObject(f, { a, b })({ c, d }) = f({ a, b, c, d })\n */\n\nvar partialObject =\n/*#__PURE__*/\n_curry2((f, o) => props => f.call(this, mergeDeepRight(o, props)));\n\nexport default partialObject;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nexport default negate;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport all from \"./all.js\";\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 !== 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nexport default o;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Given a constructor and a value, returns a new instance of that constructor\n * containing the value.\n *\n * Dispatches to the `fantasy-land/of` method of the constructor first (if present)\n * or to the `of` method last (if present). When neither are present, wraps the\n * value in an array.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig (* -> {*}) -> a -> {a}\n * @param {Object} Ctor A constructor\n * @param {*} val any value\n * @return {*} An instance of the `Ctor` wrapping `val`.\n * @example\n *\n *      R.of(Array, 42);   //=> [42]\n *      R.of(Array, [42]); //=> [[42]]\n *      R.of(Maybe, 42);   //=> Maybe.Just(42)\n */\n\nvar of =\n/*#__PURE__*/\n_curry2(function of(Ctor, val) {\n  return typeof Ctor['fantasy-land/of'] === 'function' ? Ctor['fantasy-land/of'](val) : typeof Ctor.of === 'function' ? Ctor.of(val) : [val];\n});\n\nexport default of;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;","import curryN from \"./internal/_curryN.js\";\n/**\n * Takes a binary function `f`, a unary function `g`, and two values.\n * Applies `g` to each value, then applies the result of each to `f`.\n *\n * Also known as the P combinator.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig ((a, a) -> b) -> (c -> a) -> c -> c -> b\n * @param {Function} f a binary function\n * @param {Function} g a unary function\n * @param {any} a any value\n * @param {any} b any value\n * @return {any} The result of `f`\n * @example\n *\n *      const eqBy = R.on((a, b) => a === b);\n *      eqBy(R.prop('a'), {b:0, a:1}, {a:1}) //=> true;\n *\n *      const containsInsensitive = R.on(R.includes, R.toLower);\n *      containsInsensitive('o', 'FOO'); //=> true\n * @symb R.on(f, g, a, b) = f(g(a), g(b))\n */\n\nvar on =\n/*#__PURE__*/\ncurryN(4, [], function on(f, g, a, b) {\n  return f(g(a), g(b));\n});\nexport default on;","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;","import _isFunction from \"./_isFunction.js\";\nimport _toString from \"./_toString.js\";\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;","import _curry3 from \"./internal/_curry3.js\"; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function (x) {\n  return {\n    value: x,\n    map: function (f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.set, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nexport default pair;","import _arity from \"./_arity.js\";\nimport _curry2 from \"./_curry2.js\";\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(3); //=> 6\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;","import _concat from \"./internal/_concat.js\";\nimport _createPartialApplicator from \"./internal/_createPartialApplicator.js\";\nimport flip from \"./flip.js\";\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;","import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from \"./internal/_curry3.js\";\nimport equals from \"./equals.js\";\nimport path from \"./path.js\";\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> Boolean\n * @param {*} val The value to compare the nested property with\n * @param {Array} path The path of the nested property to use\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @see R.whereEq, R.propEq, R.pathSatisfies, R.equals\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(90210, ['address', 'zipCode']);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(val, _path, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport path from \"./path.js\";\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry3 from \"./internal/_curry3.js\";\nimport path from \"./path.js\";\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int | Symbol\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n *      R.pathSatisfies(R.is(Object), [], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pick;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import multiply from \"./multiply.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;","import _map from \"./internal/_map.js\";\nimport identity from \"./identity.js\";\nimport pickAll from \"./pickAll.js\";\nimport useWith from \"./useWith.js\";\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @see R.pluck, R.props, R.prop\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;","export default function _promap(f, g, profunctor) {\n  return function (x) {\n    return g(profunctor(f(x)));\n  };\n}","import _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\n\nvar XPromap =\n/*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n\n  return XPromap;\n}();\n\nexport default function _xpromap(f, g) {\n  return function (xf) {\n    return new XPromap(f, g, xf);\n  };\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _promap from \"./internal/_promap.js\";\nimport _xpromap from \"./internal/_xpromap.js\";\n/**\n * Takes two functions as pre- and post- processors respectively for a third function,\n * i.e. `promap(f, g, h)(x) === g(h(f(x)))`.\n *\n * Dispatches to the `promap` method of the third argument, if present,\n * according to the [FantasyLand Profunctor spec](https://github.com/fantasyland/fantasy-land#profunctor).\n *\n * Acts as a transducer if a transformer is given in profunctor position.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Function\n * @sig (a -> b) -> (c -> d) -> (b -> c) -> (a -> d)\n * @sig Profunctor p => (a -> b) -> (c -> d) -> p b c -> p a d\n * @param {Function} f The preprocessor function, a -> b\n * @param {Function} g The postprocessor function, c -> d\n * @param {Profunctor} profunctor The profunctor instance to be promapped, e.g. b -> c\n * @return {Profunctor} The new profunctor instance, e.g. a -> d\n * @see R.transduce\n * @example\n *\n *      const decodeChar = R.promap(s => s.charCodeAt(), String.fromCharCode, R.add(-8))\n *      const decodeString = R.promap(R.split(''), R.join(''), R.map(decodeChar))\n *      decodeString(\"ziuli\") //=> \"ramda\"\n *\n * @symb R.promap(f, g, h) = x => g(h(f(x)))\n * @symb R.promap(f, g, profunctor) = profunctor.promap(f, g)\n */\n\nvar promap =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/promap', 'promap'], _xpromap, _promap));\n\nexport default promap;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq),\n * and test nested path property with [`R.pathEq`](#pathEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig a -> String -> Object -> Boolean\n * @param {*} val The value to compare the property with\n * @param {String} name the specified object property's key\n * @param {*} obj The object to check the property in\n * @return {Boolean} `true` if the value equals the specified object property,\n *         `false` otherwise.\n * @see R.whereEq, R.pathEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('brown', 'hair');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(val, name, obj) {\n  return equals(val, prop(name, obj));\n});\n\nexport default propEq;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport is from \"./is.js\";\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, prop(name, obj));\n});\n\nexport default propIs;","import _curry3 from \"./internal/_curry3.js\";\nimport defaultTo from \"./defaultTo.js\";\nimport prop from \"./prop.js\";\n/**\n * Return the specified property of the given non-null object if the property\n * is present and it's value is not `null`, `undefined` or `NaN`.\n *\n * Otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return defaultTo(val, prop(p, obj));\n});\n\nexport default propOr;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(prop(name, obj));\n});\n\nexport default propSatisfies;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @see R.prop, R.pluck, R.project\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  return ps.map(function (p) {\n    return path([p], obj);\n  });\n});\n\nexport default props;","import _curry2 from \"./internal/_curry2.js\";\nimport _isNumber from \"./internal/_isNumber.js\";\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*. `reduceRight` may use [`reduced`](#reduced)\n * to short circuit the iteration.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * Be cautious of mutating and returning the accumulator. If you reuse it across\n * invocations, it will continue to accumulate onto the same value. The general\n * recommendation is to always return a new value. If you can't do so for\n * performance reasons, then be sure to reinitialize the accumulator on each\n * invocation.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex, R.reduced\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;","import _curryN from \"./internal/_curryN.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator. `reduceWhile` may alternatively be short-circuited\n * via [`reduced`](#reduced).\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 !== 0;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  var xf = _xwrap(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  });\n\n  return _xReduce(xf, a, list);\n});\n\nexport default reduceWhile;","import _curry1 from \"./internal/_curry1.js\";\nimport _reduced from \"./internal/_reduced.js\";\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * This optimization is available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`reduceBy`](#reduceBy)\n * - [`reduceRight`](#reduceRight)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.reduceBy, R.reduceRight, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = [];\n\n  while (idx < len) {\n    list.push(fn(idx));\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry2 from \"./internal/_curry2.js\";\nimport always from \"./always.js\";\nimport times from \"./times.js\";\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;","import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar tInit = '@@transducer/init';\nvar tStep = '@@transducer/step';\n\nvar XScan =\n/*#__PURE__*/\nfunction () {\n  function XScan(reducer, acc, xf) {\n    this.xf = xf;\n    this.f = reducer;\n    this.acc = acc;\n  }\n\n  XScan.prototype[tInit] = function () {\n    return this.xf[tStep](this.xf[tInit](), this.acc);\n  };\n\n  XScan.prototype['@@transducer/result'] = _xfBase.result;\n\n  XScan.prototype[tStep] = function (result, input) {\n    if (result['@@transducer/reduced']) {\n      return result;\n    }\n\n    this.acc = this.f(this.acc, input);\n    return this.xf[tStep](result, this.acc);\n  };\n\n  return XScan;\n}();\n\nvar _xscan =\n/*#__PURE__*/\n_curry3(function _xscan(reducer, acc, xf) {\n  return new XScan(reducer, acc, xf);\n});\n\nexport default _xscan;","import _curry3 from \"./internal/_curry3.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xscan from \"./internal/_xscan.js\";\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\nvar scan =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_dispatchable([], _xscan, function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default scan;","import _curry2 from \"./internal/_curry2.js\";\nimport ap from \"./ap.js\";\nimport map from \"./map.js\";\nimport prepend from \"./prepend.js\";\nimport reduceRight from \"./reduceRight.js\";\nimport identity from \"./internal/_identity.js\";\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `\"fantasy-land/traverse\"` or the `traverse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig fantasy-land/of :: TypeRep f => f ~> a -> f a\n * @sig (Applicative f, Traversable t) => TypeRep f -> t (f a) -> f (t a)\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Object|Function} TypeRepresentative with an `of` or `fantasy-land/of` method\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of(Array), Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of(Array), Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(F, traversable) {\n  var of = typeof F['fantasy-land/of'] === 'function' ? F['fantasy-land/of'] : typeof F.of === 'function' ? F.of : F;\n  var TypeRep = {\n    'fantasy-land/of': of\n  };\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](TypeRep, identity) : typeof traversable.traverse === 'function' ? traversable.traverse(TypeRep, identity) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;","import _curry3 from \"./internal/_curry3.js\";\nimport always from \"./always.js\";\nimport over from \"./over.js\";\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.view, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @see R.ascend, R.descend\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @see R.ascend, R.descend\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;","import invoker from \"./invoker.js\";\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `sep`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;","import _curry2 from \"./internal/_curry2.js\";\nimport length from \"./length.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nexport default splitWhen;","import _curryN from \"./internal/_curryN.js\";\n/**\n * Splits an array into slices on every occurrence of a value.\n *\n * @func\n * @memberOf R\n * @since v0.26.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhenever(R.equals(2), [1, 2, 3, 2, 4, 5, 2, 6, 7]); //=> [[1], [3], [4, 5], [6, 7]]\n */\n\nvar splitWhenever =\n/*#__PURE__*/\n_curryN(2, [], function splitWhenever(pred, list) {\n  var acc = [];\n  var curr = [];\n\n  for (var i = 0; i < list.length; i = i + 1) {\n    if (!pred(list[i])) {\n      curr.push(list[i]);\n    }\n\n    if ((i < list.length - 1 && pred(list[i + 1]) || i === list.length - 1) && curr.length > 0) {\n      acc.push(curr);\n      curr = [];\n    }\n  }\n\n  return acc;\n});\n\nexport default splitWhenever;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport take from \"./take.js\";\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nexport default subtract;","import _curry3 from \"./internal/_curry3.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _isString from \"./internal/_isString.js\";\nimport clone from \"./clone.js\";\n\nvar swapObject = function (indexA, indexB, o) {\n  var copy = clone(o);\n  var properties = Object.getOwnPropertyNames(copy);\n\n  if (properties.includes(indexA) && properties.includes(indexB)) {\n    var tmp = copy[indexA];\n    copy[indexA] = copy[indexB];\n    copy[indexB] = tmp;\n  }\n\n  return copy;\n};\n\nvar swapList = function (indexA, indexB, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveIndexA = indexA < 0 ? length + indexA : indexA;\n  var positiveIndexB = indexB < 0 ? length + indexB : indexB;\n  var positiveMin = Math.min(positiveIndexA, positiveIndexB);\n  var positiveMax = Math.max(positiveIndexA, positiveIndexB);\n\n  if (positiveIndexA < 0 || positiveIndexA > length) {\n    return result;\n  }\n\n  if (positiveIndexB < 0 || positiveIndexB > length) {\n    return result;\n  }\n\n  if (positiveIndexA === positiveIndexB) {\n    return result;\n  }\n\n  result = [].concat(result.slice(0, positiveMin)).concat([result[positiveMax]]).concat(result.slice(positiveMin + 1, positiveMax)).concat([result[positiveMin]]).concat(result.slice(positiveMax + 1, length));\n  return result;\n};\n\nvar swapString = function (indexA, indexB, s) {\n  var result = swapList(indexA, indexB, s);\n  return _isArray(result) ? result.join('') : result;\n};\n/**\n * Swap an item, at index `indexA` with another item, at index `indexB`, in an object or a list of elements.\n * A new result will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @since v0.29.0\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number|string|Object} indexA The first index\n * @param {Number|string|Object} indexB The second index\n * @param {Array|Object} o Either the object or list which will serve to realise the swap\n * @return {Array|Object} The new object or list reordered\n * @example\n *\n *      R.swap(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['c', 'b', 'a', 'd', 'e', 'f']\n *      R.swap(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'b', 'c', 'd', 'e', 'a']\n *      R.swap('a', 'b', {a: 1, b: 2}); //=> {a: 2, b: 1}\n *      R.swap(0, 2, 'foo'); //=> 'oof'\n */\n\n\nvar swap =\n/*#__PURE__*/\n_curry3(function (indexA, indexB, o) {\n  if (_isArray(o)) {\n    return swapList(indexA, indexB, o);\n  } else if (_isString(o)) {\n    return swapString(indexA, indexB, o);\n  } else {\n    return swapObject(indexA, indexB, o);\n  }\n});\n\nexport default swap;","import _curry2 from \"./internal/_curry2.js\";\nimport concat from \"./concat.js\";\nimport difference from \"./difference.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;","import _curry3 from \"./internal/_curry3.js\";\nimport concat from \"./concat.js\";\nimport differenceWith from \"./differenceWith.js\";\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;","import _curry2 from \"./internal/_curry2.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;","import _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nexport default function _xtakeWhile(f) {\n  return function (xf) {\n    return new XTakeWhile(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtakeWhile from \"./internal/_xtakeWhile.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;","import _xfBase from \"./_xfBase.js\";\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nexport default function _xtap(f) {\n  return function (xf) {\n    return new XTap(f, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtap from \"./internal/_xtap.js\";\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = (f(a), a)\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from \"./internal/_cloneRegExp.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _isRegExp from \"./internal/_isRegExp.js\";\nimport toString from \"./toString.js\";\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      const makeQuery = email => ({ query: { email }});\n *      const fetchMember = request =>\n *        Promise.resolve({ firstName: 'Bob', lastName: 'Loblaw', id: 42 });\n *\n *      //getMemberName :: String -> Promise ({ firstName, lastName })\n *      const getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.andThen(R.pick(['firstName', 'lastName']))\n *      );\n *\n *      getMemberName('bob@gmail.com').then(console.log);\n */\n\nvar andThen =\n/*#__PURE__*/\n_curry2(function andThen(f, p) {\n  _assertPromise('andThen', p);\n\n  return p.then(f);\n});\n\nexport default andThen;","import invoker from \"./invoker.js\";\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs, R.keys, R.values\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;","import invoker from \"./invoker.js\";\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;","import _xReduce from \"./internal/_xReduce.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 !== 0;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _xReduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;","import _curry3 from \"./internal/_curry3.js\";\nimport map from \"./map.js\";\nimport sequence from \"./sequence.js\";\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig fantasy-land/of :: TypeRep f => f ~> a -> f a\n * @sig (Applicative f, Traversable t) => TypeRep f -> (a -> f b) -> t a -> f (t b)\n * @sig (Applicative f, Traversable t) => (b -> f b) -> (a -> f b) -> t a -> f (t b)\n * @param {Object|Function} TypeRepresentative with an `of` or `fantasy-land/of` method\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n *\n *      // Using a Type Representative\n *      R.traverse(Maybe, safeDiv(10), Right(4)); //=> Just(Right(2.5))\n *      R.traverse(Maybe, safeDiv(10), Right(0)); //=> Nothing\n *      R.traverse(Maybe, safeDiv(10), Left(\"X\")); //=> Just(Left(\"X\"))\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(F, f, traversable) {\n  var of = typeof F['fantasy-land/of'] === 'function' ? F['fantasy-land/of'] : typeof F.of === 'function' ? F.of : F;\n  var TypeRep = {\n    'fantasy-land/of': of\n  };\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](TypeRep, f) : typeof traversable.traverse === 'function' ? traversable.traverse(TypeRep, f) : sequence(TypeRep, map(f, traversable));\n});\n\nexport default traverse;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from \"./internal/_arity.js\";\nimport _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send them to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('caught'))('bar') // =>\n *      'caught'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n *      R.tryCatch(() => { throw 'this is not a valid value'}, (err, value)=>({error : err,  value }))('bar') // => {'error': 'this is not a valid value', 'value': 'bar'}\n */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;","import _curry1 from \"./internal/_curry1.js\";\nimport nAry from \"./nAry.js\";\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (a -> z)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;","import _curry2 from \"./internal/_curry2.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n * Note that, the returned function is actually a ramda style\n * curryied function, which can accept one or more arguments in each\n * function calling.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b -> c ... -> z) -> ((a -> b -> c ...) -> z)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry, R.curryN\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;","import _concat from \"./internal/_concat.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport compose from \"./compose.js\";\nimport uniq from \"./uniq.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;","import _includesWith from \"./_includesWith.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XUniqWith =\n/*#__PURE__*/\nfunction () {\n  function XUniqWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.items = [];\n  }\n\n  XUniqWith.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XUniqWith.prototype['@@transducer/step'] = function (result, input) {\n    if (_includesWith(this.pred, input, this.items)) {\n      return result;\n    } else {\n      this.items.push(input);\n      return this.xf['@@transducer/step'](result, input);\n    }\n  };\n\n  return XUniqWith;\n}();\n\nexport default function _xuniqWith(pred) {\n  return function (xf) {\n    return new XUniqWith(pred, xf);\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _includesWith from \"./internal/_includesWith.js\";\nimport _xuniqWith from \"./internal/_xuniqWith.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xuniqWith, function (pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}));\n\nexport default uniqWith;","import _concat from \"./internal/_concat.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport uniqWith from \"./uniqWith.js\";\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements. If an element exists\n * in both lists, the first element from the first list will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import _identity from \"./internal/_identity.js\";\nimport chain from \"./chain.js\";\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;","import _curry2 from \"./internal/_curry2.js\";\nimport _isArray from \"./internal/_isArray.js\";\nimport _map from \"./internal/_map.js\";\nimport _assoc from \"./internal/_assoc.js\";\n/**\n *\n * Deconstructs an array field from the input documents to output a document for each element.\n * Each output document is the input document with the value of the array field replaced by the element.\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig String -> {k: [v]} -> [{k: v}]\n * @param {String} key The key to determine which property of the object should be unwind\n * @param {Object} object The object containing list under property named as key which is to unwind\n * @return {List} A new list of object containing the value of input key having list replaced by each element in the object.\n * @example\n *\n * R.unwind('hobbies', {\n *   name: 'alice',\n *   hobbies: ['Golf', 'Hacking'],\n *   colors: ['red', 'green'],\n * });\n * // [\n * //   { name: 'alice', hobbies: 'Golf', colors: ['red', 'green'] },\n * //   { name: 'alice', hobbies: 'Hacking', colors: ['red', 'green'] }\n * // ]\n */\n\nvar unwind =\n/*#__PURE__*/\n_curry2(function (key, object) {\n  // If key is not in object or key is not as a list in object\n  if (!(key in object && _isArray(object[key]))) {\n    return [object];\n  } // Map over object[key] which is a list and assoc each element with key\n\n\n  return _map(function (item) {\n    return _assoc(key, item, object);\n  }, object[key]);\n});\n\nexport default unwind;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nexport default valuesIn;","import _curry2 from \"./internal/_curry2.js\"; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function (x) {\n  return {\n    value: x,\n    'fantasy-land/map': function () {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.set, R.over, R.lens, R.lensIndex, R.lensProp, R.lensPath\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> b) -> a -> a | b\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `whereAny` returns true if at least one of the predicates return true,\n * false otherwise.\n *\n * `whereAny` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.28.0\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereAny({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('xxx')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 8, y: 34}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 9, y: 21}); //=> false\n *      pred({a: 'bar', b: 'xxx', x: 10, y: 20}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 10, y: 20}); //=> true\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> true\n */\n\nvar whereAny =\n/*#__PURE__*/\n_curry2(function whereAny(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && spec[prop](testObj[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n});\n\nexport default whereAny;","import _curry2 from \"./internal/_curry2.js\";\nimport equals from \"./equals.js\";\nimport map from \"./map.js\";\nimport where from \"./where.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;","import _curry2 from \"./internal/_curry2.js\";\nimport _Set from \"./internal/_Set.js\";\nimport reject from \"./reject.js\";\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function without(xs, list) {\n  var toRemove = new _Set();\n\n  for (var i = 0; i < xs.length; i += 1) {\n    toRemove.add(xs[i]);\n  }\n\n  return reject(toRemove.has.bind(toRemove), list);\n});\n\nexport default without;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Exclusive disjunction logical operation.\n * Returns `true` if one of the arguments is truthy and the other is falsy.\n * Otherwise, it returns `false`.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Logic\n * @sig a -> b -> Boolean\n * @param {Any} a\n * @param {Any} b\n * @return {Boolean} true if one of the arguments is truthy and the other is falsy\n * @see R.or, R.and\n * @example\n *\n *      R.xor(true, true); //=> false\n *      R.xor(true, false); //=> true\n *      R.xor(false, true); //=> true\n *      R.xor(false, false); //=> false\n */\n\nvar xor =\n/*#__PURE__*/\n_curry2(function xor(a, b) {\n  return Boolean(!a ^ !b);\n});\n\nexport default xor;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zipWith;","import curryN from \"./curryN.js\";\nimport _curry1 from \"./internal/_curry1.js\";\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","export { default as F } from \"./F.js\";\nexport { default as T } from \"./T.js\";\nexport { default as __ } from \"./__.js\";\nexport { default as add } from \"./add.js\";\nexport { default as addIndex } from \"./addIndex.js\";\nexport { default as addIndexRight } from \"./addIndexRight.js\";\nexport { default as adjust } from \"./adjust.js\";\nexport { default as all } from \"./all.js\";\nexport { default as allPass } from \"./allPass.js\";\nexport { default as always } from \"./always.js\";\nexport { default as and } from \"./and.js\";\nexport { default as any } from \"./any.js\";\nexport { default as anyPass } from \"./anyPass.js\";\nexport { default as ap } from \"./ap.js\";\nexport { default as aperture } from \"./aperture.js\";\nexport { default as append } from \"./append.js\";\nexport { default as apply } from \"./apply.js\";\nexport { default as applySpec } from \"./applySpec.js\";\nexport { default as applyTo } from \"./applyTo.js\";\nexport { default as ascend } from \"./ascend.js\";\nexport { default as assoc } from \"./assoc.js\";\nexport { default as assocPath } from \"./assocPath.js\";\nexport { default as binary } from \"./binary.js\";\nexport { default as bind } from \"./bind.js\";\nexport { default as both } from \"./both.js\";\nexport { default as call } from \"./call.js\";\nexport { default as chain } from \"./chain.js\";\nexport { default as clamp } from \"./clamp.js\";\nexport { default as clone } from \"./clone.js\";\nexport { default as collectBy } from \"./collectBy.js\";\nexport { default as comparator } from \"./comparator.js\";\nexport { default as complement } from \"./complement.js\";\nexport { default as compose } from \"./compose.js\";\nexport { default as composeWith } from \"./composeWith.js\";\nexport { default as concat } from \"./concat.js\";\nexport { default as cond } from \"./cond.js\";\nexport { default as construct } from \"./construct.js\";\nexport { default as constructN } from \"./constructN.js\";\nexport { default as converge } from \"./converge.js\";\nexport { default as count } from \"./count.js\";\nexport { default as countBy } from \"./countBy.js\";\nexport { default as curry } from \"./curry.js\";\nexport { default as curryN } from \"./curryN.js\";\nexport { default as dec } from \"./dec.js\";\nexport { default as defaultTo } from \"./defaultTo.js\";\nexport { default as descend } from \"./descend.js\";\nexport { default as difference } from \"./difference.js\";\nexport { default as differenceWith } from \"./differenceWith.js\";\nexport { default as dissoc } from \"./dissoc.js\";\nexport { default as dissocPath } from \"./dissocPath.js\";\nexport { default as divide } from \"./divide.js\";\nexport { default as drop } from \"./drop.js\";\nexport { default as dropLast } from \"./dropLast.js\";\nexport { default as dropLastWhile } from \"./dropLastWhile.js\";\nexport { default as dropRepeats } from \"./dropRepeats.js\";\nexport { default as dropRepeatsBy } from \"./dropRepeatsBy.js\";\nexport { default as dropRepeatsWith } from \"./dropRepeatsWith.js\";\nexport { default as dropWhile } from \"./dropWhile.js\";\nexport { default as either } from \"./either.js\";\nexport { default as empty } from \"./empty.js\";\nexport { default as endsWith } from \"./endsWith.js\";\nexport { default as eqBy } from \"./eqBy.js\";\nexport { default as eqProps } from \"./eqProps.js\";\nexport { default as equals } from \"./equals.js\";\nexport { default as evolve } from \"./evolve.js\";\nexport { default as filter } from \"./filter.js\";\nexport { default as find } from \"./find.js\";\nexport { default as findIndex } from \"./findIndex.js\";\nexport { default as findLast } from \"./findLast.js\";\nexport { default as findLastIndex } from \"./findLastIndex.js\";\nexport { default as flatten } from \"./flatten.js\";\nexport { default as flip } from \"./flip.js\";\nexport { default as forEach } from \"./forEach.js\";\nexport { default as forEachObjIndexed } from \"./forEachObjIndexed.js\";\nexport { default as fromPairs } from \"./fromPairs.js\";\nexport { default as groupBy } from \"./groupBy.js\";\nexport { default as groupWith } from \"./groupWith.js\";\nexport { default as gt } from \"./gt.js\";\nexport { default as gte } from \"./gte.js\";\nexport { default as has } from \"./has.js\";\nexport { default as hasIn } from \"./hasIn.js\";\nexport { default as hasPath } from \"./hasPath.js\";\nexport { default as head } from \"./head.js\";\nexport { default as identical } from \"./identical.js\";\nexport { default as identity } from \"./identity.js\";\nexport { default as ifElse } from \"./ifElse.js\";\nexport { default as inc } from \"./inc.js\";\nexport { default as includes } from \"./includes.js\";\nexport { default as indexBy } from \"./indexBy.js\";\nexport { default as indexOf } from \"./indexOf.js\";\nexport { default as init } from \"./init.js\";\nexport { default as innerJoin } from \"./innerJoin.js\";\nexport { default as insert } from \"./insert.js\";\nexport { default as insertAll } from \"./insertAll.js\";\nexport { default as intersection } from \"./intersection.js\";\nexport { default as intersperse } from \"./intersperse.js\";\nexport { default as into } from \"./into.js\";\nexport { default as invert } from \"./invert.js\";\nexport { default as invertObj } from \"./invertObj.js\";\nexport { default as invoker } from \"./invoker.js\";\nexport { default as is } from \"./is.js\";\nexport { default as isEmpty } from \"./isEmpty.js\";\nexport { default as isNil } from \"./isNil.js\";\nexport { default as isNotNil } from \"./isNotNil.js\";\nexport { default as join } from \"./join.js\";\nexport { default as juxt } from \"./juxt.js\";\nexport { default as keys } from \"./keys.js\";\nexport { default as keysIn } from \"./keysIn.js\";\nexport { default as last } from \"./last.js\";\nexport { default as lastIndexOf } from \"./lastIndexOf.js\";\nexport { default as length } from \"./length.js\";\nexport { default as lens } from \"./lens.js\";\nexport { default as lensIndex } from \"./lensIndex.js\";\nexport { default as lensPath } from \"./lensPath.js\";\nexport { default as lensProp } from \"./lensProp.js\";\nexport { default as lift } from \"./lift.js\";\nexport { default as liftN } from \"./liftN.js\";\nexport { default as lt } from \"./lt.js\";\nexport { default as lte } from \"./lte.js\";\nexport { default as map } from \"./map.js\";\nexport { default as mapAccum } from \"./mapAccum.js\";\nexport { default as mapAccumRight } from \"./mapAccumRight.js\";\nexport { default as mapObjIndexed } from \"./mapObjIndexed.js\";\nexport { default as match } from \"./match.js\";\nexport { default as mathMod } from \"./mathMod.js\";\nexport { default as max } from \"./max.js\";\nexport { default as maxBy } from \"./maxBy.js\";\nexport { default as mean } from \"./mean.js\";\nexport { default as median } from \"./median.js\";\nexport { default as memoizeWith } from \"./memoizeWith.js\";\nexport { default as mergeAll } from \"./mergeAll.js\";\nexport { default as mergeDeepLeft } from \"./mergeDeepLeft.js\";\nexport { default as mergeDeepRight } from \"./mergeDeepRight.js\";\nexport { default as mergeDeepWith } from \"./mergeDeepWith.js\";\nexport { default as mergeDeepWithKey } from \"./mergeDeepWithKey.js\";\nexport { default as mergeLeft } from \"./mergeLeft.js\";\nexport { default as mergeRight } from \"./mergeRight.js\";\nexport { default as mergeWith } from \"./mergeWith.js\";\nexport { default as mergeWithKey } from \"./mergeWithKey.js\";\nexport { default as min } from \"./min.js\";\nexport { default as minBy } from \"./minBy.js\";\nexport { default as modify } from \"./modify.js\";\nexport { default as modifyPath } from \"./modifyPath.js\";\nexport { default as modulo } from \"./modulo.js\";\nexport { default as move } from \"./move.js\";\nexport { default as multiply } from \"./multiply.js\";\nexport { default as nAry } from \"./nAry.js\";\nexport { default as partialObject } from \"./partialObject.js\";\nexport { default as negate } from \"./negate.js\";\nexport { default as none } from \"./none.js\";\nexport { default as not } from \"./not.js\";\nexport { default as nth } from \"./nth.js\";\nexport { default as nthArg } from \"./nthArg.js\";\nexport { default as o } from \"./o.js\";\nexport { default as objOf } from \"./objOf.js\";\nexport { default as of } from \"./of.js\";\nexport { default as omit } from \"./omit.js\";\nexport { default as on } from \"./on.js\";\nexport { default as once } from \"./once.js\";\nexport { default as or } from \"./or.js\";\nexport { default as otherwise } from \"./otherwise.js\";\nexport { default as over } from \"./over.js\";\nexport { default as pair } from \"./pair.js\";\nexport { default as partial } from \"./partial.js\";\nexport { default as partialRight } from \"./partialRight.js\";\nexport { default as partition } from \"./partition.js\";\nexport { default as path } from \"./path.js\";\nexport { default as paths } from \"./paths.js\";\nexport { default as pathEq } from \"./pathEq.js\";\nexport { default as pathOr } from \"./pathOr.js\";\nexport { default as pathSatisfies } from \"./pathSatisfies.js\";\nexport { default as pick } from \"./pick.js\";\nexport { default as pickAll } from \"./pickAll.js\";\nexport { default as pickBy } from \"./pickBy.js\";\nexport { default as pipe } from \"./pipe.js\";\nexport { default as pipeWith } from \"./pipeWith.js\";\nexport { default as pluck } from \"./pluck.js\";\nexport { default as prepend } from \"./prepend.js\";\nexport { default as product } from \"./product.js\";\nexport { default as project } from \"./project.js\";\nexport { default as promap } from \"./promap.js\";\nexport { default as prop } from \"./prop.js\";\nexport { default as propEq } from \"./propEq.js\";\nexport { default as propIs } from \"./propIs.js\";\nexport { default as propOr } from \"./propOr.js\";\nexport { default as propSatisfies } from \"./propSatisfies.js\";\nexport { default as props } from \"./props.js\";\nexport { default as range } from \"./range.js\";\nexport { default as reduce } from \"./reduce.js\";\nexport { default as reduceBy } from \"./reduceBy.js\";\nexport { default as reduceRight } from \"./reduceRight.js\";\nexport { default as reduceWhile } from \"./reduceWhile.js\";\nexport { default as reduced } from \"./reduced.js\";\nexport { default as reject } from \"./reject.js\";\nexport { default as remove } from \"./remove.js\";\nexport { default as repeat } from \"./repeat.js\";\nexport { default as replace } from \"./replace.js\";\nexport { default as reverse } from \"./reverse.js\";\nexport { default as scan } from \"./scan.js\";\nexport { default as sequence } from \"./sequence.js\";\nexport { default as set } from \"./set.js\";\nexport { default as slice } from \"./slice.js\";\nexport { default as sort } from \"./sort.js\";\nexport { default as sortBy } from \"./sortBy.js\";\nexport { default as sortWith } from \"./sortWith.js\";\nexport { default as split } from \"./split.js\";\nexport { default as splitAt } from \"./splitAt.js\";\nexport { default as splitEvery } from \"./splitEvery.js\";\nexport { default as splitWhen } from \"./splitWhen.js\";\nexport { default as splitWhenever } from \"./splitWhenever.js\";\nexport { default as startsWith } from \"./startsWith.js\";\nexport { default as subtract } from \"./subtract.js\";\nexport { default as sum } from \"./sum.js\";\nexport { default as swap } from \"./swap.js\";\nexport { default as symmetricDifference } from \"./symmetricDifference.js\";\nexport { default as symmetricDifferenceWith } from \"./symmetricDifferenceWith.js\";\nexport { default as tail } from \"./tail.js\";\nexport { default as take } from \"./take.js\";\nexport { default as takeLast } from \"./takeLast.js\";\nexport { default as takeLastWhile } from \"./takeLastWhile.js\";\nexport { default as takeWhile } from \"./takeWhile.js\";\nexport { default as tap } from \"./tap.js\";\nexport { default as test } from \"./test.js\";\nexport { default as andThen } from \"./andThen.js\";\nexport { default as times } from \"./times.js\";\nexport { default as toLower } from \"./toLower.js\";\nexport { default as toPairs } from \"./toPairs.js\";\nexport { default as toPairsIn } from \"./toPairsIn.js\";\nexport { default as toString } from \"./toString.js\";\nexport { default as toUpper } from \"./toUpper.js\";\nexport { default as transduce } from \"./transduce.js\";\nexport { default as transpose } from \"./transpose.js\";\nexport { default as traverse } from \"./traverse.js\";\nexport { default as trim } from \"./trim.js\";\nexport { default as tryCatch } from \"./tryCatch.js\";\nexport { default as type } from \"./type.js\";\nexport { default as unapply } from \"./unapply.js\";\nexport { default as unary } from \"./unary.js\";\nexport { default as uncurryN } from \"./uncurryN.js\";\nexport { default as unfold } from \"./unfold.js\";\nexport { default as union } from \"./union.js\";\nexport { default as unionWith } from \"./unionWith.js\";\nexport { default as uniq } from \"./uniq.js\";\nexport { default as uniqBy } from \"./uniqBy.js\";\nexport { default as uniqWith } from \"./uniqWith.js\";\nexport { default as unless } from \"./unless.js\";\nexport { default as unnest } from \"./unnest.js\";\nexport { default as until } from \"./until.js\";\nexport { default as unwind } from \"./unwind.js\";\nexport { default as update } from \"./update.js\";\nexport { default as useWith } from \"./useWith.js\";\nexport { default as values } from \"./values.js\";\nexport { default as valuesIn } from \"./valuesIn.js\";\nexport { default as view } from \"./view.js\";\nexport { default as when } from \"./when.js\";\nexport { default as where } from \"./where.js\";\nexport { default as whereAny } from \"./whereAny.js\";\nexport { default as whereEq } from \"./whereEq.js\";\nexport { default as without } from \"./without.js\";\nexport { default as xor } from \"./xor.js\";\nexport { default as xprod } from \"./xprod.js\";\nexport { default as zip } from \"./zip.js\";\nexport { default as zipObj } from \"./zipObj.js\";\nexport { default as zipWith } from \"./zipWith.js\";\nexport { default as thunkify } from \"./thunkify.js\";","import * as R from \"ramda\";\n\nconst extras = {\n  \"000a\": \"\\\\n\",\n  \"000d\": \"\\\\r\",\n  \"0020\": \"\\\\s\",\n};\n\nconst trans = (v) => v.charCodeAt(0).toString(16).padStart(4, \"0\");\nconst table$ = <HTMLInputElement>document.getElementById(\"table\");\n\n(<HTMLInputElement>document.getElementById(\"check\")).onclick = () =>\n  (table$.innerHTML = R.pipe(\n    R.map((chunk: string[]) => [\n      `<tr>`,\n      R.pipe(\n        R.map(\n          (v: string) =>\n            `<td>${\n              extras[v.charCodeAt(0).toString(16).padStart(4, \"0\")] || v\n            }</td>`\n        ),\n        R.join(\"\")\n      )(chunk),\n      `</tr><tr>`,\n      R.pipe(\n        R.map((v) => {\n          const code = trans(v);\n          return `<td><a href=\"https://www.fileformat.info/info/unicode/char/${code}/index.htm\" target=\"code\">${code}</a></td>`;\n        }),\n        R.join(\"\")\n      )(chunk),\n      `</tr>`,\n    ]),\n    R.flatten,\n    R.join(\"\")\n  )(\n    R.pipe(\n      R.split(\"\"),\n      R.ifElse(\n        (v: string[]) => R.lt(16, R.length(v)),\n        R.splitEvery(16),\n        (v: string[]) => [v]\n      )\n    )(\n      (<HTMLInputElement>document.getElementById(\"content\")).value\n    ) as string[][]\n  ));\n"]}